// Code generated by protoc-gen-go. DO NOT EDIT.
// source: billing/billing.proto

package billing // import "github.com/paysuper/paysuper-billing-server/pkg/proto/billing"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Name struct {
	// @inject_tag: bson:"EN" json:"EN" structure:"EN"
	En string `protobuf:"bytes,1,opt,name=en,proto3" json:"EN" bson:"EN" structure:"EN"`
	// @inject_tag: bson:"RU" json:"RU" structure:"RU"
	Ru                   string   `protobuf:"bytes,2,opt,name=ru,proto3" json:"RU" bson:"RU" structure:"RU"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{0}
}
func (m *Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Name.Unmarshal(m, b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Name.Marshal(b, m, deterministic)
}
func (dst *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(dst, src)
}
func (m *Name) XXX_Size() int {
	return xxx_messageInfo_Name.Size(m)
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetEn() string {
	if m != nil {
		return m.En
	}
	return ""
}

func (m *Name) GetRu() string {
	if m != nil {
		return m.Ru
	}
	return ""
}

type OrderCreateRequest struct {
	// @inject_tag: query:"PO_PROJECT_ID" form:"PO_PROJECT_ID" json:"project" validate:"required,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project" query:"PO_PROJECT_ID" form:"PO_PROJECT_ID" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"PO_SIGNATURE" form:"PO_SIGNATURE" validate:"omitempty,alphanum"
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty" query:"PO_SIGNATURE" form:"PO_SIGNATURE" validate:"omitempty,alphanum"`
	// @inject_tag: query:"PO_AMOUNT" form:"PO_AMOUNT" json:"amount" validate:"required,numeric"
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount" query:"PO_AMOUNT" form:"PO_AMOUNT" validate:"required,numeric"`
	// @inject_tag: query:"PO_CURRENCY" form:"PO_CURRENCY" json:"currency" validate:"omitempty,alpha,len=3"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" query:"PO_CURRENCY" form:"PO_CURRENCY" validate:"omitempty,alpha,len=3"`
	// @inject_tag: "PO_ACCOUNT" form:"PO_ACCOUNT" json:"account"`
	Account string `protobuf:"bytes,5,opt,name=account,proto3" json:"account" form:"PO_ACCOUNT"`
	// @inject_tag: query:"PO_ORDER_ID" form:"PO_ORDER_ID" json:"order_id" validate:"omitempty,max=255"
	OrderId string `protobuf:"bytes,6,opt,name=order_id,json=orderId,proto3" json:"order_id" query:"PO_ORDER_ID" form:"PO_ORDER_ID" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_DESCRIPTION" form:"PO_DESCRIPTION" json:"description" validate:"omitempty,max=255"
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description" query:"PO_DESCRIPTION" form:"PO_DESCRIPTION" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_PAYMENT_METHOD" form:"PO_PAYMENT_METHOD" json:"payment_method" validate:"omitempty,max=255"
	PaymentMethod string `protobuf:"bytes,8,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method" query:"PO_PAYMENT_METHOD" form:"PO_PAYMENT_METHOD" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_URL_VERIFY" form:"PO_URL_VERIFY" json:"url_verify" validate:"omitempty,url"
	UrlVerify string `protobuf:"bytes,9,opt,name=url_verify,json=urlVerify,proto3" json:"url_verify" query:"PO_URL_VERIFY" form:"PO_URL_VERIFY" validate:"omitempty,url"`
	// @inject_tag: query:"PO_URL_NOTIFY" form:"PO_URL_NOTIFY" json:"url_notify" validate:"omitempty,url"
	UrlNotify string `protobuf:"bytes,10,opt,name=url_notify,json=urlNotify,proto3" json:"url_notify" query:"PO_URL_NOTIFY" form:"PO_URL_NOTIFY" validate:"omitempty,url"`
	// @inject_tag: query:"PO_URL_SUCCESS" form:"PO_URL_SUCCESS" json:"url_success" validate:"omitempty,url"
	UrlSuccess string `protobuf:"bytes,11,opt,name=url_success,json=urlSuccess,proto3" json:"url_success" query:"PO_URL_SUCCESS" form:"PO_URL_SUCCESS" validate:"omitempty,url"`
	// @inject_tag: query:"PO_URL_FAIL" form:"PO_URL_FAIL" json:"url_fail" validate:"omitempty,url"
	UrlFail string `protobuf:"bytes,12,opt,name=url_fail,json=urlFail,proto3" json:"url_fail" query:"PO_URL_FAIL" form:"PO_URL_FAIL" validate:"omitempty,url"`
	// @inject_tag: query:"PO_PAYER_EMAIL" form:"PO_PAYER_EMAIL" json:"payer_email" validate:"omitempty,email"
	PayerEmail string `protobuf:"bytes,13,opt,name=payer_email,json=payerEmail,proto3" json:"payer_email" query:"PO_PAYER_EMAIL" form:"PO_PAYER_EMAIL" validate:"omitempty,email"`
	// @inject_tag: query:"PO_PAYER_PHONE" form:"PO_PAYER_PHONE" json:"payer_phone" validate:"omitempty,max=255"
	PayerPhone string `protobuf:"bytes,14,opt,name=payer_phone,json=payerPhone,proto3" json:"payer_phone" query:"PO_PAYER_PHONE" form:"PO_PAYER_PHONE" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_REGION" form:"PO_REGION" json:"region" validate:"omitempty,alpha,len=2"
	Region  string            `protobuf:"bytes,15,opt,name=region,proto3" json:"region" query:"PO_REGION" form:"PO_REGION" validate:"omitempty,alpha,len=2"`
	PayerIp string            `protobuf:"bytes,16,opt,name=payer_ip,json=payerIp,proto3" json:"payer_ip,omitempty"`
	Other   map[string]string `protobuf:"bytes,17,rep,name=other,proto3" json:"other,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	RawParams map[string]string `protobuf:"bytes,18,rep,name=raw_params,json=rawParams,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	RawBody string `protobuf:"bytes,19,opt,name=raw_body,json=rawBody,proto3" json:"-"`
	// @inject_tag: json:"-"
	IsJson bool `protobuf:"varint,20,opt,name=is_json,json=isJson,proto3" json:"-"`
	// @inject_tag: json:"-"
	Language string `protobuf:"bytes,21,opt,name=language,proto3" json:"-"`
	// @inject_tag: json:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
	Products []string `protobuf:"bytes,22,rep,name=products,proto3" json:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"`
	// @inject_tag: json:"-"
	Metadata map[string]string `protobuf:"bytes,23,rep,name=metadata,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	PrivateMetadata      map[string]string `protobuf:"bytes,24,rep,name=private_metadata,json=privateMetadata,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	User                 *Customer         `protobuf:"bytes,25,opt,name=user,proto3" json:"user,omitempty"`
	Token                string            `protobuf:"bytes,26,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderCreateRequest) Reset()         { *m = OrderCreateRequest{} }
func (m *OrderCreateRequest) String() string { return proto.CompactTextString(m) }
func (*OrderCreateRequest) ProtoMessage()    {}
func (*OrderCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{1}
}
func (m *OrderCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCreateRequest.Unmarshal(m, b)
}
func (m *OrderCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCreateRequest.Marshal(b, m, deterministic)
}
func (dst *OrderCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCreateRequest.Merge(dst, src)
}
func (m *OrderCreateRequest) XXX_Size() int {
	return xxx_messageInfo_OrderCreateRequest.Size(m)
}
func (m *OrderCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCreateRequest proto.InternalMessageInfo

func (m *OrderCreateRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *OrderCreateRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *OrderCreateRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderCreateRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderCreateRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *OrderCreateRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderCreateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OrderCreateRequest) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlVerify() string {
	if m != nil {
		return m.UrlVerify
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlNotify() string {
	if m != nil {
		return m.UrlNotify
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerEmail() string {
	if m != nil {
		return m.PayerEmail
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerPhone() string {
	if m != nil {
		return m.PayerPhone
	}
	return ""
}

func (m *OrderCreateRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerIp() string {
	if m != nil {
		return m.PayerIp
	}
	return ""
}

func (m *OrderCreateRequest) GetOther() map[string]string {
	if m != nil {
		return m.Other
	}
	return nil
}

func (m *OrderCreateRequest) GetRawParams() map[string]string {
	if m != nil {
		return m.RawParams
	}
	return nil
}

func (m *OrderCreateRequest) GetRawBody() string {
	if m != nil {
		return m.RawBody
	}
	return ""
}

func (m *OrderCreateRequest) GetIsJson() bool {
	if m != nil {
		return m.IsJson
	}
	return false
}

func (m *OrderCreateRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *OrderCreateRequest) GetProducts() []string {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *OrderCreateRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderCreateRequest) GetPrivateMetadata() map[string]string {
	if m != nil {
		return m.PrivateMetadata
	}
	return nil
}

func (m *OrderCreateRequest) GetUser() *Customer {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OrderCreateRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Project struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"callback_currency" validate:"omitempty,len=3"
	CallbackCurrency string `protobuf:"bytes,2,opt,name=callback_currency,json=callbackCurrency,proto3" json:"callback_currency" validate:"omitempty,len=3"`
	// @inject_tag: json:"callback_protocol" validate:"omitempty,oneof=default empty"
	CallbackProtocol string `protobuf:"bytes,3,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol" validate:"omitempty,oneof=default empty"`
	// @inject_tag: json:"create_order_allowed_urls" validate:"omitempty,dive,url"
	CreateOrderAllowedUrls []string `protobuf:"bytes,4,rep,name=create_order_allowed_urls,json=createOrderAllowedUrls,proto3" json:"create_order_allowed_urls" validate:"omitempty,dive,url"`
	// @inject_tag: json:"-"
	Merchant *Merchant `protobuf:"bytes,5,opt,name=merchant,proto3" json:"-"`
	// @inject_tag: json:"allow_dynamic_notify_urls"
	AllowDynamicNotifyUrls bool `protobuf:"varint,6,opt,name=allow_dynamic_notify_urls,json=allowDynamicNotifyUrls,proto3" json:"allow_dynamic_notify_urls"`
	// @inject_tag: json:"allow_dynamic_redirect_urls"
	AllowDynamicRedirectUrls bool `protobuf:"varint,7,opt,name=allow_dynamic_redirect_urls,json=allowDynamicRedirectUrls,proto3" json:"allow_dynamic_redirect_urls"`
	// @inject_tag: json:"limits_currency" validate:"omitempty,len=3"
	LimitsCurrency string `protobuf:"bytes,8,opt,name=limits_currency,json=limitsCurrency,proto3" json:"limits_currency" validate:"omitempty,len=3"`
	// @inject_tag: bson:"max_payment_amount" structure:"max_payment_amount"
	MaxPaymentAmount float64 `protobuf:"fixed64,9,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount,omitempty" bson:"max_payment_amount" structure:"max_payment_amount"`
	// @inject_tag: bson:"min_payment_amount" structure:"min_payment_amount"
	MinPaymentAmount float64 `protobuf:"fixed64,10,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount,omitempty" bson:"min_payment_amount" structure:"min_payment_amount"`
	// @inject_tag: bson:"name" structure:"name"
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty" bson:"name" structure:"name"`
	// @inject_tag: bson:"notify_emails" structure:"notify_emails"
	NotifyEmails []string `protobuf:"bytes,12,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty" bson:"notify_emails" structure:"notify_emails"`
	// @inject_tag: bson:"is_products_checkout" structure:"is_products_checkout"
	IsProductsCheckout bool `protobuf:"varint,13,opt,name=is_products_checkout,json=isProductsCheckout,proto3" json:"is_products_checkout,omitempty" bson:"is_products_checkout" structure:"is_products_checkout"`
	// @inject_tag: bson:"secret_key" structure:"secret_key"
	SecretKey string `protobuf:"bytes,14,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty" bson:"secret_key" structure:"secret_key"`
	// @inject_tag: bson:"signature_required"
	SignatureRequired bool `protobuf:"varint,15,opt,name=signature_required,json=signatureRequired,proto3" json:"signature_required,omitempty" bson:"signature_required"`
	// @inject_tag: bson:"send_notify_email" structure:"send_notify_email"
	SendNotifyEmail bool `protobuf:"varint,16,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty" bson:"send_notify_email" structure:"send_notify_email"`
	// @inject_tag: bson:"url_check_account" structure:"url_check_account"
	UrlCheckAccount string `protobuf:"bytes,17,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty" bson:"url_check_account" structure:"url_check_account"`
	// @inject_tag: bson:"url_process_payment" structure:"url_process_payment"
	UrlProcessPayment string `protobuf:"bytes,18,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty" bson:"url_process_payment" structure:"url_process_payment"`
	// @inject_tag: bson:"url_redirect_fail" structure:"url_redirect_fail"
	UrlRedirectFail string `protobuf:"bytes,19,opt,name=url_redirect_fail,json=urlRedirectFail,proto3" json:"url_redirect_fail,omitempty" bson:"url_redirect_fail" structure:"url_redirect_fail"`
	// @inject_tag: bson:"url_redirect_success" structure:"url_redirect_success"
	UrlRedirectSuccess string `protobuf:"bytes,20,opt,name=url_redirect_success,json=urlRedirectSuccess,proto3" json:"url_redirect_success,omitempty" bson:"url_redirect_success" structure:"url_redirect_success"`
	// @inject_tag: bson:"fixed_package" structure:"fixed_package"
	FixedPackage map[string]*FixedPackages `protobuf:"bytes,21,rep,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"fixed_package" structure:"fixed_package"`
	// @inject_tag: bson:"payment_methods" structure:"payment_methods"
	PaymentMethods map[string]*ProjectPaymentMethod `protobuf:"bytes,22,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"payment_methods" structure:"payment_methods"`
	// @inject_tag: bson:"is_active" structure:"is_active"
	IsActive bool `protobuf:"varint,23,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active" structure:"is_active"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,24,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,25,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{2}
}
func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (dst *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(dst, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetCallbackCurrency() string {
	if m != nil {
		return m.CallbackCurrency
	}
	return ""
}

func (m *Project) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *Project) GetCreateOrderAllowedUrls() []string {
	if m != nil {
		return m.CreateOrderAllowedUrls
	}
	return nil
}

func (m *Project) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

func (m *Project) GetAllowDynamicNotifyUrls() bool {
	if m != nil {
		return m.AllowDynamicNotifyUrls
	}
	return false
}

func (m *Project) GetAllowDynamicRedirectUrls() bool {
	if m != nil {
		return m.AllowDynamicRedirectUrls
	}
	return false
}

func (m *Project) GetLimitsCurrency() string {
	if m != nil {
		return m.LimitsCurrency
	}
	return ""
}

func (m *Project) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *Project) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *Project) GetIsProductsCheckout() bool {
	if m != nil {
		return m.IsProductsCheckout
	}
	return false
}

func (m *Project) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *Project) GetSignatureRequired() bool {
	if m != nil {
		return m.SignatureRequired
	}
	return false
}

func (m *Project) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *Project) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *Project) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *Project) GetUrlRedirectFail() string {
	if m != nil {
		return m.UrlRedirectFail
	}
	return ""
}

func (m *Project) GetUrlRedirectSuccess() string {
	if m != nil {
		return m.UrlRedirectSuccess
	}
	return ""
}

func (m *Project) GetFixedPackage() map[string]*FixedPackages {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

func (m *Project) GetPaymentMethods() map[string]*ProjectPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *Project) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Project) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Project) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ProjectOrder struct {
	// @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id" structure:"_id,bsonobjectid"`
	// @inject_tag: bson:"name" structure:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name" structure:"name"`
	// @inject_tag: bson:"url_redirect_success" structure:"url_redirect_success"
	UrlSuccess string `protobuf:"bytes,3,opt,name=url_success,json=urlSuccess,proto3" json:"url_success,omitempty" bson:"url_redirect_success" structure:"url_redirect_success"`
	// @inject_tag: bson:"url_redirect_fail" structure:"url_redirect_fail"
	UrlFail string `protobuf:"bytes,4,opt,name=url_fail,json=urlFail,proto3" json:"url_fail,omitempty" bson:"url_redirect_fail" structure:"url_redirect_fail"`
	// @inject_tag: bson:"notify_emails" structure:"notify_emails"
	NotifyEmails []string `protobuf:"bytes,5,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty" bson:"notify_emails" structure:"notify_emails"`
	// @inject_tag: bson:"secret_key" structure:"secret_key"
	SecretKey string `protobuf:"bytes,6,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty" bson:"secret_key" structure:"secret_key"`
	// @inject_tag: bson:"send_notify_email" structure:"send_notify_email"
	SendNotifyEmail bool `protobuf:"varint,7,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty" bson:"send_notify_email" structure:"send_notify_email"`
	// @inject_tag: bson:"url_check_account" structure:"url_check_account"
	UrlCheckAccount string `protobuf:"bytes,8,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty" bson:"url_check_account" structure:"url_check_account"`
	// @inject_tag: bson:"url_process_payment" structure:"url_process_payment"
	UrlProcessPayment string `protobuf:"bytes,9,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty" bson:"url_process_payment" structure:"url_process_payment"`
	// @inject_tag: bson:"callback_protocol" structure:"callback_protocol"
	CallbackProtocol string `protobuf:"bytes,10,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol,omitempty" bson:"callback_protocol" structure:"callback_protocol"`
	// @inject_tag: bson:"merchant" structure:"merchant"
	Merchant             *Merchant `protobuf:"bytes,12,opt,name=merchant,proto3" json:"merchant,omitempty" bson:"merchant" structure:"merchant"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ProjectOrder) Reset()         { *m = ProjectOrder{} }
func (m *ProjectOrder) String() string { return proto.CompactTextString(m) }
func (*ProjectOrder) ProtoMessage()    {}
func (*ProjectOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{3}
}
func (m *ProjectOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectOrder.Unmarshal(m, b)
}
func (m *ProjectOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectOrder.Marshal(b, m, deterministic)
}
func (dst *ProjectOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectOrder.Merge(dst, src)
}
func (m *ProjectOrder) XXX_Size() int {
	return xxx_messageInfo_ProjectOrder.Size(m)
}
func (m *ProjectOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectOrder proto.InternalMessageInfo

func (m *ProjectOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectOrder) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *ProjectOrder) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *ProjectOrder) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *ProjectOrder) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ProjectOrder) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *ProjectOrder) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *ProjectOrder) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *ProjectOrder) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *ProjectOrder) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

type MerchantContact struct {
	// @inject_tag: validate:"required" json:"authorized"
	Authorized *MerchantContactAuthorized `protobuf:"bytes,1,opt,name=authorized,proto3" json:"authorized" validate:"required"`
	// @inject_tag: validate:"required" json:"technical"
	Technical            *MerchantContactTechnical `protobuf:"bytes,2,opt,name=technical,proto3" json:"technical" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantContact) Reset()         { *m = MerchantContact{} }
func (m *MerchantContact) String() string { return proto.CompactTextString(m) }
func (*MerchantContact) ProtoMessage()    {}
func (*MerchantContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{4}
}
func (m *MerchantContact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContact.Unmarshal(m, b)
}
func (m *MerchantContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContact.Marshal(b, m, deterministic)
}
func (dst *MerchantContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContact.Merge(dst, src)
}
func (m *MerchantContact) XXX_Size() int {
	return xxx_messageInfo_MerchantContact.Size(m)
}
func (m *MerchantContact) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContact.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContact proto.InternalMessageInfo

func (m *MerchantContact) GetAuthorized() *MerchantContactAuthorized {
	if m != nil {
		return m.Authorized
	}
	return nil
}

func (m *MerchantContact) GetTechnical() *MerchantContactTechnical {
	if m != nil {
		return m.Technical
	}
	return nil
}

type MerchantContactTechnical struct {
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// @inject_tag: validate:"omitempty,email" json:"email"
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email" validate:"omitempty,email"`
	// @inject_tag: validate:"omitempty,phone" json:"phone"
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone" validate:"omitempty,phone"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantContactTechnical) Reset()         { *m = MerchantContactTechnical{} }
func (m *MerchantContactTechnical) String() string { return proto.CompactTextString(m) }
func (*MerchantContactTechnical) ProtoMessage()    {}
func (*MerchantContactTechnical) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{5}
}
func (m *MerchantContactTechnical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContactTechnical.Unmarshal(m, b)
}
func (m *MerchantContactTechnical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContactTechnical.Marshal(b, m, deterministic)
}
func (dst *MerchantContactTechnical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContactTechnical.Merge(dst, src)
}
func (m *MerchantContactTechnical) XXX_Size() int {
	return xxx_messageInfo_MerchantContactTechnical.Size(m)
}
func (m *MerchantContactTechnical) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContactTechnical.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContactTechnical proto.InternalMessageInfo

func (m *MerchantContactTechnical) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantContactTechnical) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MerchantContactTechnical) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type MerchantContactAuthorized struct {
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// @inject_tag: validate:"omitempty,email" json:"email"
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email" validate:"omitempty,email"`
	// @inject_tag: validate:"omitempty,phone" json:"phone"
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone" validate:"omitempty,phone"`
	// @inject_tag: json:"position"
	Position             string   `protobuf:"bytes,4,opt,name=position,proto3" json:"position"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantContactAuthorized) Reset()         { *m = MerchantContactAuthorized{} }
func (m *MerchantContactAuthorized) String() string { return proto.CompactTextString(m) }
func (*MerchantContactAuthorized) ProtoMessage()    {}
func (*MerchantContactAuthorized) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{6}
}
func (m *MerchantContactAuthorized) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContactAuthorized.Unmarshal(m, b)
}
func (m *MerchantContactAuthorized) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContactAuthorized.Marshal(b, m, deterministic)
}
func (dst *MerchantContactAuthorized) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContactAuthorized.Merge(dst, src)
}
func (m *MerchantContactAuthorized) XXX_Size() int {
	return xxx_messageInfo_MerchantContactAuthorized.Size(m)
}
func (m *MerchantContactAuthorized) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContactAuthorized.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContactAuthorized proto.InternalMessageInfo

func (m *MerchantContactAuthorized) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantContactAuthorized) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MerchantContactAuthorized) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *MerchantContactAuthorized) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type MerchantBanking struct {
	// @inject_tag: json:"currency"
	Currency *Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// @inject_tag: json:"address"
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address"`
	// @inject_tag: json:"account_number"
	AccountNumber string `protobuf:"bytes,4,opt,name=account_number,json=accountNumber,proto3" json:"account_number"`
	// @inject_tag: json:"swift"
	Swift string `protobuf:"bytes,5,opt,name=swift,proto3" json:"swift"`
	// @inject_tag: json:"details"
	Details              string   `protobuf:"bytes,6,opt,name=details,proto3" json:"details"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantBanking) Reset()         { *m = MerchantBanking{} }
func (m *MerchantBanking) String() string { return proto.CompactTextString(m) }
func (*MerchantBanking) ProtoMessage()    {}
func (*MerchantBanking) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{7}
}
func (m *MerchantBanking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantBanking.Unmarshal(m, b)
}
func (m *MerchantBanking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantBanking.Marshal(b, m, deterministic)
}
func (dst *MerchantBanking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantBanking.Merge(dst, src)
}
func (m *MerchantBanking) XXX_Size() int {
	return xxx_messageInfo_MerchantBanking.Size(m)
}
func (m *MerchantBanking) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantBanking.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantBanking proto.InternalMessageInfo

func (m *MerchantBanking) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *MerchantBanking) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantBanking) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MerchantBanking) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *MerchantBanking) GetSwift() string {
	if m != nil {
		return m.Swift
	}
	return ""
}

func (m *MerchantBanking) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type MerchantLastPayout struct {
	// @inject_tag: json:"date"
	Date *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date"`
	// @inject_tag: json:"amount"
	Amount               float64  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantLastPayout) Reset()         { *m = MerchantLastPayout{} }
func (m *MerchantLastPayout) String() string { return proto.CompactTextString(m) }
func (*MerchantLastPayout) ProtoMessage()    {}
func (*MerchantLastPayout) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{8}
}
func (m *MerchantLastPayout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantLastPayout.Unmarshal(m, b)
}
func (m *MerchantLastPayout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantLastPayout.Marshal(b, m, deterministic)
}
func (dst *MerchantLastPayout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantLastPayout.Merge(dst, src)
}
func (m *MerchantLastPayout) XXX_Size() int {
	return xxx_messageInfo_MerchantLastPayout.Size(m)
}
func (m *MerchantLastPayout) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantLastPayout.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantLastPayout proto.InternalMessageInfo

func (m *MerchantLastPayout) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *MerchantLastPayout) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type MerchantUser struct {
	// @inject_tag: json:"id" validate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required"`
	// @inject_tag: json:"email" validate:"required,email"
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email" validate:"required,email"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantUser) Reset()         { *m = MerchantUser{} }
func (m *MerchantUser) String() string { return proto.CompactTextString(m) }
func (*MerchantUser) ProtoMessage()    {}
func (*MerchantUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{9}
}
func (m *MerchantUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantUser.Unmarshal(m, b)
}
func (m *MerchantUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantUser.Marshal(b, m, deterministic)
}
func (dst *MerchantUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantUser.Merge(dst, src)
}
func (m *MerchantUser) XXX_Size() int {
	return xxx_messageInfo_MerchantUser.Size(m)
}
func (m *MerchantUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantUser.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantUser proto.InternalMessageInfo

func (m *MerchantUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Merchant struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: json:"user"
	User *MerchantUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	// @inject_tag: json:"alternative_name"
	AlternativeName string `protobuf:"bytes,5,opt,name=alternative_name,json=alternativeName,proto3" json:"alternative_name"`
	// @inject_tag: json:"website"
	Website string `protobuf:"bytes,6,opt,name=website,proto3" json:"website"`
	// @inject_tag: json:"country"
	Country *Country `protobuf:"bytes,7,opt,name=country,proto3" json:"country"`
	// @inject_tag: json:"state"
	State string `protobuf:"bytes,8,opt,name=state,proto3" json:"state"`
	// @inject_tag: json:"zip"
	Zip string `protobuf:"bytes,9,opt,name=zip,proto3" json:"zip"`
	// @inject_tag: json:"city"
	City string `protobuf:"bytes,10,opt,name=city,proto3" json:"city"`
	// @inject_tag: json:"address"
	Address string `protobuf:"bytes,11,opt,name=address,proto3" json:"address"`
	// @inject_tag: json:"address_additional"
	AddressAdditional string `protobuf:"bytes,12,opt,name=address_additional,json=addressAdditional,proto3" json:"address_additional"`
	// @inject_tag: json:"registration_number"
	RegistrationNumber string `protobuf:"bytes,13,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number"`
	// @inject_tag: json:"tax_id"
	TaxId string `protobuf:"bytes,14,opt,name=tax_id,json=taxId,proto3" json:"tax_id"`
	// @inject_tag: json:"contacts"
	Contacts *MerchantContact `protobuf:"bytes,15,opt,name=contacts,proto3" json:"contacts"`
	// @inject_tag: json:"banking"
	Banking *MerchantBanking `protobuf:"bytes,16,opt,name=banking,proto3" json:"banking"`
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,17,opt,name=status,proto3" json:"status"`
	// @inject_tag: json:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	// @inject_tag: json:"first_payment_at"
	FirstPaymentAt *timestamp.Timestamp `protobuf:"bytes,20,opt,name=first_payment_at,json=firstPaymentAt,proto3" json:"first_payment_at"`
	// @inject_tag: json:"-"
	IsVatEnabled bool `protobuf:"varint,21,opt,name=is_vat_enabled,json=isVatEnabled,proto3" json:"-"`
	// @inject_tag: json:"-"
	IsCommissionToUserEnabled bool `protobuf:"varint,22,opt,name=is_commission_to_user_enabled,json=isCommissionToUserEnabled,proto3" json:"-"`
	// @inject_tag: json:"has_merchant_signature"
	HasMerchantSignature bool `protobuf:"varint,23,opt,name=has_merchant_signature,json=hasMerchantSignature,proto3" json:"has_merchant_signature"`
	// @inject_tag: json:"has_psp_signature"
	HasPspSignature bool `protobuf:"varint,24,opt,name=has_psp_signature,json=hasPspSignature,proto3" json:"has_psp_signature"`
	// @inject_tag: json:"last_payout"
	LastPayout *MerchantLastPayout `protobuf:"bytes,25,opt,name=last_payout,json=lastPayout,proto3" json:"last_payout"`
	// @inject_tag: json:"is_signed"
	IsSigned bool `protobuf:"varint,26,opt,name=is_signed,json=isSigned,proto3" json:"is_signed"`
	// @inject_tag: json:"payment_methods"
	PaymentMethods map[string]*MerchantPaymentMethod `protobuf:"bytes,28,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"agreement_type"
	AgreementType int32 `protobuf:"varint,29,opt,name=agreement_type,json=agreementType,proto3" json:"agreement_type"`
	// @inject_tag: json:"agreement_sent_via_mail"
	AgreementSentViaMail bool `protobuf:"varint,30,opt,name=agreement_sent_via_mail,json=agreementSentViaMail,proto3" json:"agreement_sent_via_mail"`
	// @inject_tag: json:"mail_tracking_link"
	MailTrackingLink string `protobuf:"bytes,31,opt,name=mail_tracking_link,json=mailTrackingLink,proto3" json:"mail_tracking_link"`
	// @inject_tag: json:"-"
	S3AgreementName      string   `protobuf:"bytes,32,opt,name=s3_agreement_name,json=s3AgreementName,proto3" json:"-"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Merchant) Reset()         { *m = Merchant{} }
func (m *Merchant) String() string { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()    {}
func (*Merchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{10}
}
func (m *Merchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Merchant.Unmarshal(m, b)
}
func (m *Merchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Merchant.Marshal(b, m, deterministic)
}
func (dst *Merchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Merchant.Merge(dst, src)
}
func (m *Merchant) XXX_Size() int {
	return xxx_messageInfo_Merchant.Size(m)
}
func (m *Merchant) XXX_DiscardUnknown() {
	xxx_messageInfo_Merchant.DiscardUnknown(m)
}

var xxx_messageInfo_Merchant proto.InternalMessageInfo

func (m *Merchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Merchant) GetUser() *MerchantUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Merchant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Merchant) GetAlternativeName() string {
	if m != nil {
		return m.AlternativeName
	}
	return ""
}

func (m *Merchant) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Merchant) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Merchant) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Merchant) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Merchant) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Merchant) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Merchant) GetAddressAdditional() string {
	if m != nil {
		return m.AddressAdditional
	}
	return ""
}

func (m *Merchant) GetRegistrationNumber() string {
	if m != nil {
		return m.RegistrationNumber
	}
	return ""
}

func (m *Merchant) GetTaxId() string {
	if m != nil {
		return m.TaxId
	}
	return ""
}

func (m *Merchant) GetContacts() *MerchantContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Merchant) GetBanking() *MerchantBanking {
	if m != nil {
		return m.Banking
	}
	return nil
}

func (m *Merchant) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Merchant) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Merchant) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Merchant) GetFirstPaymentAt() *timestamp.Timestamp {
	if m != nil {
		return m.FirstPaymentAt
	}
	return nil
}

func (m *Merchant) GetIsVatEnabled() bool {
	if m != nil {
		return m.IsVatEnabled
	}
	return false
}

func (m *Merchant) GetIsCommissionToUserEnabled() bool {
	if m != nil {
		return m.IsCommissionToUserEnabled
	}
	return false
}

func (m *Merchant) GetHasMerchantSignature() bool {
	if m != nil {
		return m.HasMerchantSignature
	}
	return false
}

func (m *Merchant) GetHasPspSignature() bool {
	if m != nil {
		return m.HasPspSignature
	}
	return false
}

func (m *Merchant) GetLastPayout() *MerchantLastPayout {
	if m != nil {
		return m.LastPayout
	}
	return nil
}

func (m *Merchant) GetIsSigned() bool {
	if m != nil {
		return m.IsSigned
	}
	return false
}

func (m *Merchant) GetPaymentMethods() map[string]*MerchantPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *Merchant) GetAgreementType() int32 {
	if m != nil {
		return m.AgreementType
	}
	return 0
}

func (m *Merchant) GetAgreementSentViaMail() bool {
	if m != nil {
		return m.AgreementSentViaMail
	}
	return false
}

func (m *Merchant) GetMailTrackingLink() string {
	if m != nil {
		return m.MailTrackingLink
	}
	return ""
}

func (m *Merchant) GetS3AgreementName() string {
	if m != nil {
		return m.S3AgreementName
	}
	return ""
}

type SystemNotificationStatuses struct {
	From                 int32    `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   int32    `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *SystemNotificationStatuses) Reset()         { *m = SystemNotificationStatuses{} }
func (m *SystemNotificationStatuses) String() string { return proto.CompactTextString(m) }
func (*SystemNotificationStatuses) ProtoMessage()    {}
func (*SystemNotificationStatuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{11}
}
func (m *SystemNotificationStatuses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemNotificationStatuses.Unmarshal(m, b)
}
func (m *SystemNotificationStatuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemNotificationStatuses.Marshal(b, m, deterministic)
}
func (dst *SystemNotificationStatuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemNotificationStatuses.Merge(dst, src)
}
func (m *SystemNotificationStatuses) XXX_Size() int {
	return xxx_messageInfo_SystemNotificationStatuses.Size(m)
}
func (m *SystemNotificationStatuses) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemNotificationStatuses.DiscardUnknown(m)
}

var xxx_messageInfo_SystemNotificationStatuses proto.InternalMessageInfo

func (m *SystemNotificationStatuses) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *SystemNotificationStatuses) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

type Notification struct {
	Id                   string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string                      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message              string                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MerchantId           string                      `protobuf:"bytes,4,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	UserId               string                      `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsSystem             bool                        `protobuf:"varint,6,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	IsRead               bool                        `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	Statuses             *SystemNotificationStatuses `protobuf:"bytes,8,opt,name=statuses,proto3" json:"statuses,omitempty"`
	CreatedAt            *timestamp.Timestamp        `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp        `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                      `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                       `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{12}
}
func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (dst *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(dst, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notification) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Notification) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Notification) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Notification) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Notification) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

func (m *Notification) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

func (m *Notification) GetStatuses() *SystemNotificationStatuses {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *Notification) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Notification) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type OrderPlatformFee struct {
	Amount               float32  `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	EffectiveRate        float32  `protobuf:"fixed32,3,opt,name=effective_rate,json=effectiveRate,proto3" json:"effective_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderPlatformFee) Reset()         { *m = OrderPlatformFee{} }
func (m *OrderPlatformFee) String() string { return proto.CompactTextString(m) }
func (*OrderPlatformFee) ProtoMessage()    {}
func (*OrderPlatformFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{13}
}
func (m *OrderPlatformFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderPlatformFee.Unmarshal(m, b)
}
func (m *OrderPlatformFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderPlatformFee.Marshal(b, m, deterministic)
}
func (dst *OrderPlatformFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderPlatformFee.Merge(dst, src)
}
func (m *OrderPlatformFee) XXX_Size() int {
	return xxx_messageInfo_OrderPlatformFee.Size(m)
}
func (m *OrderPlatformFee) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderPlatformFee.DiscardUnknown(m)
}

var xxx_messageInfo_OrderPlatformFee proto.InternalMessageInfo

func (m *OrderPlatformFee) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderPlatformFee) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderPlatformFee) GetEffectiveRate() float32 {
	if m != nil {
		return m.EffectiveRate
	}
	return 0
}

type OrderTax struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Rate                 float32  `protobuf:"fixed32,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Amount               float32  `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderTax) Reset()         { *m = OrderTax{} }
func (m *OrderTax) String() string { return proto.CompactTextString(m) }
func (*OrderTax) ProtoMessage()    {}
func (*OrderTax) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{14}
}
func (m *OrderTax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderTax.Unmarshal(m, b)
}
func (m *OrderTax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderTax.Marshal(b, m, deterministic)
}
func (dst *OrderTax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderTax.Merge(dst, src)
}
func (m *OrderTax) XXX_Size() int {
	return xxx_messageInfo_OrderTax.Size(m)
}
func (m *OrderTax) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderTax.DiscardUnknown(m)
}

var xxx_messageInfo_OrderTax proto.InternalMessageInfo

func (m *OrderTax) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderTax) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *OrderTax) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderTax) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type OrderBillingAddress struct {
	// @inject_tag: validate:"omitempty,alpha,len=2"
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty" validate:"omitempty,alpha,len=2"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode           string   `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderBillingAddress) Reset()         { *m = OrderBillingAddress{} }
func (m *OrderBillingAddress) String() string { return proto.CompactTextString(m) }
func (*OrderBillingAddress) ProtoMessage()    {}
func (*OrderBillingAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{15}
}
func (m *OrderBillingAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBillingAddress.Unmarshal(m, b)
}
func (m *OrderBillingAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBillingAddress.Marshal(b, m, deterministic)
}
func (dst *OrderBillingAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBillingAddress.Merge(dst, src)
}
func (m *OrderBillingAddress) XXX_Size() int {
	return xxx_messageInfo_OrderBillingAddress.Size(m)
}
func (m *OrderBillingAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBillingAddress.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBillingAddress proto.InternalMessageInfo

func (m *OrderBillingAddress) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *OrderBillingAddress) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *OrderBillingAddress) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *OrderBillingAddress) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Order struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"project" structure:"project"
	Project *ProjectOrder `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty" bson:"project" structure:"project"`
	// @inject_tag: bson:"project_order_id" structure:"project_order_id"
	ProjectOrderId string `protobuf:"bytes,3,opt,name=project_order_id,json=projectOrderId,proto3" json:"project_order_id,omitempty" bson:"project_order_id" structure:"project_order_id"`
	// @inject_tag: bson:"project_account" structure:"project_account"
	ProjectAccount string `protobuf:"bytes,4,opt,name=project_account,json=projectAccount,proto3" json:"project_account,omitempty" bson:"project_account" structure:"project_account"`
	// @inject_tag: bson:"description" structure:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty" bson:"description" structure:"description"`
	// @inject_tag: bson:"project_income_amount" structure:"project_income_amount"
	ProjectIncomeAmount float64 `protobuf:"fixed64,6,opt,name=project_income_amount,json=projectIncomeAmount,proto3" json:"project_income_amount,omitempty" bson:"project_income_amount" structure:"project_income_amount"`
	// @inject_tag: bson:"project_income_currency" structure:"project_income_currency"
	ProjectIncomeCurrency *Currency `protobuf:"bytes,7,opt,name=project_income_currency,json=projectIncomeCurrency,proto3" json:"project_income_currency,omitempty" bson:"project_income_currency" structure:"project_income_currency"`
	// @inject_tag: bson:"project_outcome_amount" structure:"project_outcome_amount"
	ProjectOutcomeAmount float64 `protobuf:"fixed64,8,opt,name=project_outcome_amount,json=projectOutcomeAmount,proto3" json:"project_outcome_amount,omitempty" bson:"project_outcome_amount" structure:"project_outcome_amount"`
	// @inject_tag: bson:"project_outcome_currency" structure:"project_outcome_currency"
	ProjectOutcomeCurrency *Currency `protobuf:"bytes,9,opt,name=project_outcome_currency,json=projectOutcomeCurrency,proto3" json:"project_outcome_currency,omitempty" bson:"project_outcome_currency" structure:"project_outcome_currency"`
	// @inject_tag: bson:"project_last_requested_at" structure:"project_last_requested_at,timestamp"
	ProjectLastRequestedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=project_last_requested_at,json=projectLastRequestedAt,proto3" json:"project_last_requested_at,omitempty" bson:"project_last_requested_at" structure:"project_last_requested_at,timestamp"`
	// @inject_tag: bson:"project_params" structure:"project_params"
	ProjectParams map[string]string `protobuf:"bytes,11,rep,name=project_params,json=projectParams,proto3" json:"project_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"project_params" structure:"project_params"`
	// @inject_tag: bson:"payer_data" structure:"payer_data"
	PayerData *PayerData `protobuf:"bytes,12,opt,name=payer_data,json=payerData,proto3" json:"payer_data,omitempty" bson:"payer_data" structure:"payer_data"`
	// @inject_tag: bson:"payment_method" structure:"payment_method"
	PaymentMethod *PaymentMethodOrder `protobuf:"bytes,13,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty" bson:"payment_method" structure:"payment_method"`
	// @inject_tag: bson:"pm_order_id" structure:"pm_order_id"
	PaymentMethodOrderId string `protobuf:"bytes,14,opt,name=payment_method_order_id,json=paymentMethodOrderId,proto3" json:"payment_method_order_id,omitempty" bson:"pm_order_id" structure:"pm_order_id"`
	// @inject_tag: bson:"pm_outcome_amount" structure:"pm_outcome_amount"
	PaymentMethodOutcomeAmount float64 `protobuf:"fixed64,15,opt,name=payment_method_outcome_amount,json=paymentMethodOutcomeAmount,proto3" json:"payment_method_outcome_amount,omitempty" bson:"pm_outcome_amount" structure:"pm_outcome_amount"`
	// @inject_tag: bson:"pm_outcome_currency" structure:"pm_outcome_currency"
	PaymentMethodOutcomeCurrency *Currency `protobuf:"bytes,16,opt,name=payment_method_outcome_currency,json=paymentMethodOutcomeCurrency,proto3" json:"payment_method_outcome_currency,omitempty" bson:"pm_outcome_currency" structure:"pm_outcome_currency"`
	// @inject_tag: bson:"pm_income_amount" structure:"pm_income_amount"
	PaymentMethodIncomeAmount float64 `protobuf:"fixed64,17,opt,name=payment_method_income_amount,json=paymentMethodIncomeAmount,proto3" json:"payment_method_income_amount,omitempty" bson:"pm_income_amount" structure:"pm_income_amount"`
	// @inject_tag: bson:"pm_income_currency" structure:"pm_income_currency"
	PaymentMethodIncomeCurrency *Currency `protobuf:"bytes,18,opt,name=payment_method_income_currency,json=paymentMethodIncomeCurrency,proto3" json:"payment_method_income_currency,omitempty" bson:"pm_income_currency" structure:"pm_income_currency"`
	// @inject_tag: bson:"pm_order_close_date" structure:"pm_order_close_date,timestamp"
	PaymentMethodOrderClosedAt *timestamp.Timestamp `protobuf:"bytes,19,opt,name=payment_method_order_closed_at,json=paymentMethodOrderClosedAt,proto3" json:"payment_method_order_closed_at,omitempty" bson:"pm_order_close_date" structure:"pm_order_close_date,timestamp"`
	// @inject_tag: bson:"status" structure:"status"
	Status int32 `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty" bson:"status" structure:"status"`
	// @inject_tag: bson:"created_at" structure:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at" structure:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at" structure:"updated_at,timestamp"`
	// @inject_tag: bson:"created_by_json" structure:"created_by_json"
	IsJsonRequest bool `protobuf:"varint,23,opt,name=is_json_request,json=isJsonRequest,proto3" json:"is_json_request,omitempty" bson:"created_by_json" structure:"created_by_json"`
	// @inject_tag: bson:"amount_psp_ac" structure:"amount_psp_ac"
	AmountInPspAccountingCurrency float64 `protobuf:"fixed64,24,opt,name=amount_in_psp_accounting_currency,json=amountInPspAccountingCurrency,proto3" json:"amount_in_psp_accounting_currency,omitempty" bson:"amount_psp_ac" structure:"amount_psp_ac"`
	// @inject_tag: bson:"amount_in_merchant_ac" structure:"amount_in_merchant_ac"
	AmountInMerchantAccountingCurrency float64 `protobuf:"fixed64,25,opt,name=amount_in_merchant_accounting_currency,json=amountInMerchantAccountingCurrency,proto3" json:"amount_in_merchant_accounting_currency,omitempty" bson:"amount_in_merchant_ac" structure:"amount_in_merchant_ac"`
	// @inject_tag: bson:"amount_out_merchant_ac" structure:"amount_out_merchant_ac"
	AmountOutMerchantAccountingCurrency float64 `protobuf:"fixed64,26,opt,name=amount_out_merchant_accounting_currency,json=amountOutMerchantAccountingCurrency,proto3" json:"amount_out_merchant_accounting_currency,omitempty" bson:"amount_out_merchant_ac" structure:"amount_out_merchant_ac"`
	// @inject_tag: bson:"amount_ps_ac" structure:"amount_ps_ac"
	AmountInPaymentSystemAccountingCurrency float64 `protobuf:"fixed64,27,opt,name=amount_in_payment_system_accounting_currency,json=amountInPaymentSystemAccountingCurrency,proto3" json:"amount_in_payment_system_accounting_currency,omitempty" bson:"amount_ps_ac" structure:"amount_ps_ac"`
	// @inject_tag: bson:"pm_account" structure:"pm_account"
	PaymentMethodPayerAccount string `protobuf:"bytes,28,opt,name=payment_method_payer_account,json=paymentMethodPayerAccount,proto3" json:"payment_method_payer_account,omitempty" bson:"pm_account" structure:"pm_account"`
	// @inject_tag: bson:"pm_txn_params" structure:"pm_txn_params"
	PaymentMethodTxnParams map[string]string `protobuf:"bytes,29,rep,name=payment_method_txn_params,json=paymentMethodTxnParams,proto3" json:"payment_method_txn_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"pm_txn_params" structure:"pm_txn_params"`
	// @inject_tag: bson:"payment_requisites" json:"-" structure:"payment_requisites"
	PaymentRequisites map[string]string `protobuf:"bytes,31,rep,name=payment_requisites,json=paymentRequisites,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"payment_requisites" structure:"payment_requisites"`
	// @inject_tag: bson:"psp_fee_amount" structure:"psp_fee_amount"
	PspFeeAmount *OrderFeePsp `protobuf:"bytes,32,opt,name=psp_fee_amount,json=pspFeeAmount,proto3" json:"psp_fee_amount,omitempty" bson:"psp_fee_amount" structure:"psp_fee_amount"`
	// @inject_tag: bson:"project_fee_amount" structure:"project_fee_amount"
	ProjectFeeAmount *OrderFee `protobuf:"bytes,33,opt,name=project_fee_amount,json=projectFeeAmount,proto3" json:"project_fee_amount,omitempty" bson:"project_fee_amount" structure:"project_fee_amount"`
	// @inject_tag: bson:"to_payer_fee_amount" structure:"to_payer_fee_amount"
	ToPayerFeeAmount *OrderFee `protobuf:"bytes,34,opt,name=to_payer_fee_amount,json=toPayerFeeAmount,proto3" json:"to_payer_fee_amount,omitempty" bson:"to_payer_fee_amount" structure:"to_payer_fee_amount"`
	// @inject_tag: bson:"ps_fee_amount" structure:"ps_fee_amount"
	PaymentSystemFeeAmount *OrderFeePaymentSystem `protobuf:"bytes,36,opt,name=payment_system_fee_amount,json=paymentSystemFeeAmount,proto3" json:"payment_system_fee_amount,omitempty" bson:"ps_fee_amount" structure:"ps_fee_amount"`
	Tax                    *OrderTax              `protobuf:"bytes,37,opt,name=tax,proto3" json:"tax,omitempty"`
	// @inject_tag: json:"-"
	Uuid string `protobuf:"bytes,38,opt,name=uuid,proto3" json:"-"`
	// @inject_tag: json:"-"
	ExpireDateToFormInput *timestamp.Timestamp `protobuf:"bytes,39,opt,name=expire_date_to_form_input,json=expireDateToFormInput,proto3" json:"-"`
	TotalPaymentAmount    float64              `protobuf:"fixed64,43,opt,name=total_payment_amount,json=totalPaymentAmount,proto3" json:"total_payment_amount,omitempty"`
	BillingAddress        *OrderBillingAddress `protobuf:"bytes,44,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address,omitempty"`
	User                  *Customer            `protobuf:"bytes,45,opt,name=user,proto3" json:"user,omitempty"`
	// @inject_tag: json:"-"
	UserAddressDataRequired bool `protobuf:"varint,46,opt,name=user_address_data_required,json=userAddressDataRequired,proto3" json:"-"`
	// @inject_tag: json:"-" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
	Products []string `protobuf:"bytes,47,rep,name=products,proto3" json:"-" validate:"omitempty,gte=1,dive,hexadecimal,len=24"`
	// @inject_tag: json:"items" validate="omitempty,gte=1,dive"
	Items []*OrderItem `protobuf:"bytes,48,rep,name=items,proto3" json:"items"`
	// @inject_tag: validate:"required,numeric,gt=0" json:"amount"
	Amount float64 `protobuf:"fixed64,49,opt,name=amount,proto3" json:"amount" validate:"required,numeric,gt=0"`
	// @inject_tag: validate:"required,alpha,len=3" json:"currency"
	Currency string `protobuf:"bytes,50,opt,name=currency,proto3" json:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,51,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	PrivateMetadata      map[string]string `protobuf:"bytes,52,rep,name=private_metadata,json=privateMetadata,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{16}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetProject() *ProjectOrder {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *Order) GetProjectOrderId() string {
	if m != nil {
		return m.ProjectOrderId
	}
	return ""
}

func (m *Order) GetProjectAccount() string {
	if m != nil {
		return m.ProjectAccount
	}
	return ""
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Order) GetProjectIncomeAmount() float64 {
	if m != nil {
		return m.ProjectIncomeAmount
	}
	return 0
}

func (m *Order) GetProjectIncomeCurrency() *Currency {
	if m != nil {
		return m.ProjectIncomeCurrency
	}
	return nil
}

func (m *Order) GetProjectOutcomeAmount() float64 {
	if m != nil {
		return m.ProjectOutcomeAmount
	}
	return 0
}

func (m *Order) GetProjectOutcomeCurrency() *Currency {
	if m != nil {
		return m.ProjectOutcomeCurrency
	}
	return nil
}

func (m *Order) GetProjectLastRequestedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ProjectLastRequestedAt
	}
	return nil
}

func (m *Order) GetProjectParams() map[string]string {
	if m != nil {
		return m.ProjectParams
	}
	return nil
}

func (m *Order) GetPayerData() *PayerData {
	if m != nil {
		return m.PayerData
	}
	return nil
}

func (m *Order) GetPaymentMethod() *PaymentMethodOrder {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *Order) GetPaymentMethodOrderId() string {
	if m != nil {
		return m.PaymentMethodOrderId
	}
	return ""
}

func (m *Order) GetPaymentMethodOutcomeAmount() float64 {
	if m != nil {
		return m.PaymentMethodOutcomeAmount
	}
	return 0
}

func (m *Order) GetPaymentMethodOutcomeCurrency() *Currency {
	if m != nil {
		return m.PaymentMethodOutcomeCurrency
	}
	return nil
}

func (m *Order) GetPaymentMethodIncomeAmount() float64 {
	if m != nil {
		return m.PaymentMethodIncomeAmount
	}
	return 0
}

func (m *Order) GetPaymentMethodIncomeCurrency() *Currency {
	if m != nil {
		return m.PaymentMethodIncomeCurrency
	}
	return nil
}

func (m *Order) GetPaymentMethodOrderClosedAt() *timestamp.Timestamp {
	if m != nil {
		return m.PaymentMethodOrderClosedAt
	}
	return nil
}

func (m *Order) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Order) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Order) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Order) GetIsJsonRequest() bool {
	if m != nil {
		return m.IsJsonRequest
	}
	return false
}

func (m *Order) GetAmountInPspAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInPspAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountInMerchantAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInMerchantAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountOutMerchantAccountingCurrency() float64 {
	if m != nil {
		return m.AmountOutMerchantAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountInPaymentSystemAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInPaymentSystemAccountingCurrency
	}
	return 0
}

func (m *Order) GetPaymentMethodPayerAccount() string {
	if m != nil {
		return m.PaymentMethodPayerAccount
	}
	return ""
}

func (m *Order) GetPaymentMethodTxnParams() map[string]string {
	if m != nil {
		return m.PaymentMethodTxnParams
	}
	return nil
}

func (m *Order) GetPaymentRequisites() map[string]string {
	if m != nil {
		return m.PaymentRequisites
	}
	return nil
}

func (m *Order) GetPspFeeAmount() *OrderFeePsp {
	if m != nil {
		return m.PspFeeAmount
	}
	return nil
}

func (m *Order) GetProjectFeeAmount() *OrderFee {
	if m != nil {
		return m.ProjectFeeAmount
	}
	return nil
}

func (m *Order) GetToPayerFeeAmount() *OrderFee {
	if m != nil {
		return m.ToPayerFeeAmount
	}
	return nil
}

func (m *Order) GetPaymentSystemFeeAmount() *OrderFeePaymentSystem {
	if m != nil {
		return m.PaymentSystemFeeAmount
	}
	return nil
}

func (m *Order) GetTax() *OrderTax {
	if m != nil {
		return m.Tax
	}
	return nil
}

func (m *Order) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Order) GetExpireDateToFormInput() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireDateToFormInput
	}
	return nil
}

func (m *Order) GetTotalPaymentAmount() float64 {
	if m != nil {
		return m.TotalPaymentAmount
	}
	return 0
}

func (m *Order) GetBillingAddress() *OrderBillingAddress {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *Order) GetUser() *Customer {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Order) GetUserAddressDataRequired() bool {
	if m != nil {
		return m.UserAddressDataRequired
	}
	return false
}

func (m *Order) GetProducts() []string {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Order) GetItems() []*OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Order) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Order) GetPrivateMetadata() map[string]string {
	if m != nil {
		return m.PrivateMetadata
	}
	return nil
}

type OrderItem struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required,hexadecimal,len=24" bson:"_id"`
	// @inject_tag: validate:"required" json:"object"
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object" validate:"required"`
	// @inject_tag: validate:"required" json:"sku" bson:"sku"
	Sku string `protobuf:"bytes,3,opt,name=sku,proto3" json:"sku" validate:"required" bson:"sku"`
	// @inject_tag: validate:"required" json:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name" validate:"required"`
	// @inject_tag: validate:"required" json:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description" validate:"required"`
	// @inject_tag: validate:"required,numeric,gt=0" json:"amount"
	Amount float64 `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount" validate:"required,numeric,gt=0"`
	// @inject_tag: validate:"required,alpha,len=3" json:"currency"
	Currency string `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: validate:"dive,omitempty,uri" json:"images"
	Images []string `protobuf:"bytes,8,rep,name=images,proto3" json:"images" validate:"dive,omitempty,uri"`
	// @inject_tag: validate:"omitempty,url" json:"url"
	Url string `protobuf:"bytes,9,opt,name=url,proto3" json:"url" validate:"omitempty,url"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderItem) Reset()         { *m = OrderItem{} }
func (m *OrderItem) String() string { return proto.CompactTextString(m) }
func (*OrderItem) ProtoMessage()    {}
func (*OrderItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{17}
}
func (m *OrderItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderItem.Unmarshal(m, b)
}
func (m *OrderItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderItem.Marshal(b, m, deterministic)
}
func (dst *OrderItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderItem.Merge(dst, src)
}
func (m *OrderItem) XXX_Size() int {
	return xxx_messageInfo_OrderItem.Size(m)
}
func (m *OrderItem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderItem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderItem proto.InternalMessageInfo

func (m *OrderItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderItem) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *OrderItem) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *OrderItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OrderItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderItem) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *OrderItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *OrderItem) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrderItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Currency struct {
	// @inject_tag: bson:"code_int"
	CodeInt int32 `protobuf:"varint,1,opt,name=code_int,json=codeInt,proto3" json:"code_int,omitempty" bson:"code_int"`
	// @inject_tag: bson:"code_a3"
	CodeA3 string `protobuf:"bytes,2,opt,name=code_a3,json=codeA3,proto3" json:"code_a3,omitempty" bson:"code_a3"`
	// @inject_tag: bson:"name"
	Name *Name `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{18}
}
func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (dst *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(dst, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetCodeInt() int32 {
	if m != nil {
		return m.CodeInt
	}
	return 0
}

func (m *Currency) GetCodeA3() string {
	if m != nil {
		return m.CodeA3
	}
	return ""
}

func (m *Currency) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Currency) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Currency) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Currency) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type PayerData struct {
	// @inject_tag: bson:"ip" structure:"ip"
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty" bson:"ip" structure:"ip"`
	// @inject_tag: bson:"country_code_a2" structure:"country_code_a2"
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty" bson:"country_code_a2" structure:"country_code_a2"`
	// @inject_tag: bson:"country_name" structure:"country_name"
	CountryName *Name `protobuf:"bytes,3,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty" bson:"country_name" structure:"country_name"`
	// @inject_tag: bson:"city" structure:"city"
	City     *Name  `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty" bson:"city" structure:"city"`
	Zip      string `protobuf:"bytes,5,opt,name=zip,proto3" json:"zip,omitempty"`
	State    string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Language string `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	// @inject_tag: bson:"timezone" structure:"timezone"
	Timezone string `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty" bson:"timezone" structure:"timezone"`
	// @inject_tag: bson:"phone" structure:"phone"
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty" bson:"phone" structure:"phone"`
	// @inject_tag: bson:"email" structure:"email"
	Email                string   `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty" bson:"email" structure:"email"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PayerData) Reset()         { *m = PayerData{} }
func (m *PayerData) String() string { return proto.CompactTextString(m) }
func (*PayerData) ProtoMessage()    {}
func (*PayerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{19}
}
func (m *PayerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayerData.Unmarshal(m, b)
}
func (m *PayerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayerData.Marshal(b, m, deterministic)
}
func (dst *PayerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayerData.Merge(dst, src)
}
func (m *PayerData) XXX_Size() int {
	return xxx_messageInfo_PayerData.Size(m)
}
func (m *PayerData) XXX_DiscardUnknown() {
	xxx_messageInfo_PayerData.DiscardUnknown(m)
}

var xxx_messageInfo_PayerData proto.InternalMessageInfo

func (m *PayerData) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PayerData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PayerData) GetCountryName() *Name {
	if m != nil {
		return m.CountryName
	}
	return nil
}

func (m *PayerData) GetCity() *Name {
	if m != nil {
		return m.City
	}
	return nil
}

func (m *PayerData) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *PayerData) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PayerData) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *PayerData) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *PayerData) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PayerData) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type PaymentMethodOrder struct {
	// @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id" structure:"_id,bsonobjectid"`
	// @inject_tag: bson:"name" structure:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name" structure:"name"`
	// @inject_tag: bson:"params" structure:"params"
	Params *PaymentMethodParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty" bson:"params" structure:"params"`
	// @inject_tag: bson:"payment_system" structure:"payment_system"
	PaymentSystem *PaymentSystem `protobuf:"bytes,4,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty" bson:"payment_system" structure:"payment_system"`
	// @inject_tag: bson:"group_alias" structure:"group_alias"
	Group                string   `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty" bson:"group_alias" structure:"group_alias"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethodOrder) Reset()         { *m = PaymentMethodOrder{} }
func (m *PaymentMethodOrder) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodOrder) ProtoMessage()    {}
func (*PaymentMethodOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{20}
}
func (m *PaymentMethodOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodOrder.Unmarshal(m, b)
}
func (m *PaymentMethodOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodOrder.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodOrder.Merge(dst, src)
}
func (m *PaymentMethodOrder) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodOrder.Size(m)
}
func (m *PaymentMethodOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodOrder proto.InternalMessageInfo

func (m *PaymentMethodOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethodOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethodOrder) GetParams() *PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PaymentMethodOrder) GetPaymentSystem() *PaymentSystem {
	if m != nil {
		return m.PaymentSystem
	}
	return nil
}

func (m *PaymentMethodOrder) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type PaymentMethodParams struct {
	// @inject_tag: bson:"handler" structure:"handler"
	Handler string `protobuf:"bytes,1,opt,name=handler,proto3" json:"handler,omitempty" bson:"handler" structure:"handler"`
	// @inject_tag: bson:"terminal" structure:"terminal"
	Terminal string `protobuf:"bytes,2,opt,name=terminal,proto3" json:"terminal,omitempty" bson:"terminal" structure:"terminal"`
	// @inject_tag: bson:"password"
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" bson:"password"`
	// @inject_tag: bson:"callback_password"
	CallbackPassword string `protobuf:"bytes,5,opt,name=callback_password,json=callbackPassword,proto3" json:"callback_password,omitempty" bson:"callback_password"`
	// @inject_tag: bson:"external_id" structure:"external_id"
	ExternalId string `protobuf:"bytes,6,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty" bson:"external_id" structure:"external_id"`
	// @inject_tag: bson:"other" structure:"other"
	Other                map[string]string `protobuf:"bytes,7,rep,name=other,proto3" json:"other,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"other" structure:"other"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethodParams) Reset()         { *m = PaymentMethodParams{} }
func (m *PaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodParams) ProtoMessage()    {}
func (*PaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{21}
}
func (m *PaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodParams.Unmarshal(m, b)
}
func (m *PaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodParams.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodParams.Merge(dst, src)
}
func (m *PaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodParams.Size(m)
}
func (m *PaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodParams proto.InternalMessageInfo

func (m *PaymentMethodParams) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *PaymentMethodParams) GetTerminal() string {
	if m != nil {
		return m.Terminal
	}
	return ""
}

func (m *PaymentMethodParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *PaymentMethodParams) GetCallbackPassword() string {
	if m != nil {
		return m.CallbackPassword
	}
	return ""
}

func (m *PaymentMethodParams) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *PaymentMethodParams) GetOther() map[string]string {
	if m != nil {
		return m.Other
	}
	return nil
}

type PaymentSystem struct {
	// @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id" structure:"_id,bsonobjectid"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"country" structure:"country"
	Country *Country `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty" bson:"country" structure:"country"`
	// @inject_tag: bson:"accounting_currency" structure:"accounting_currency"
	AccountingCurrency *Currency `protobuf:"bytes,4,opt,name=accounting_currency,json=accountingCurrency,proto3" json:"accounting_currency,omitempty" bson:"accounting_currency" structure:"accounting_currency"`
	// @inject_tag: bson:"accounting_period" structure:"accounting_period"
	AccountingPeriod string `protobuf:"bytes,5,opt,name=accounting_period,json=accountingPeriod,proto3" json:"accounting_period,omitempty" bson:"accounting_period" structure:"accounting_period"`
	// @inject_tag: bson:"is_active" structure:"is_active"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active" structure:"is_active"`
	// @inject_tag: bson:"created_at" structure:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at" structure:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at" structure:"updated_at,timestamp"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentSystem) Reset()         { *m = PaymentSystem{} }
func (m *PaymentSystem) String() string { return proto.CompactTextString(m) }
func (*PaymentSystem) ProtoMessage()    {}
func (*PaymentSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{22}
}
func (m *PaymentSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentSystem.Unmarshal(m, b)
}
func (m *PaymentSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentSystem.Marshal(b, m, deterministic)
}
func (dst *PaymentSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentSystem.Merge(dst, src)
}
func (m *PaymentSystem) XXX_Size() int {
	return xxx_messageInfo_PaymentSystem.Size(m)
}
func (m *PaymentSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentSystem.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentSystem proto.InternalMessageInfo

func (m *PaymentSystem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentSystem) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *PaymentSystem) GetAccountingCurrency() *Currency {
	if m != nil {
		return m.AccountingCurrency
	}
	return nil
}

func (m *PaymentSystem) GetAccountingPeriod() string {
	if m != nil {
		return m.AccountingPeriod
	}
	return ""
}

func (m *PaymentSystem) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentSystem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentSystem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type FixedPackage struct {
	// @inject_tag: bson:"id" structure:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id" structure:"id"`
	// @inject_tag: bson:"name" structure:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name" structure:"name"`
	// @inject_tag: bson:"currency"
	Currency *Currency `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty" bson:"currency"`
	// @inject_tag: bson:"price" structure:"price"
	Price float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty" bson:"price" structure:"price"`
	// @inject_tag: bson:"is_active" structure:"is_active"
	IsActive             bool     `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active" structure:"is_active"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *FixedPackage) Reset()         { *m = FixedPackage{} }
func (m *FixedPackage) String() string { return proto.CompactTextString(m) }
func (*FixedPackage) ProtoMessage()    {}
func (*FixedPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{23}
}
func (m *FixedPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackage.Unmarshal(m, b)
}
func (m *FixedPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackage.Marshal(b, m, deterministic)
}
func (dst *FixedPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackage.Merge(dst, src)
}
func (m *FixedPackage) XXX_Size() int {
	return xxx_messageInfo_FixedPackage.Size(m)
}
func (m *FixedPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackage.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackage proto.InternalMessageInfo

func (m *FixedPackage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FixedPackage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FixedPackage) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *FixedPackage) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *FixedPackage) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type FixedPackages struct {
	FixedPackage         []*FixedPackage `protobuf:"bytes,1,rep,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *FixedPackages) Reset()         { *m = FixedPackages{} }
func (m *FixedPackages) String() string { return proto.CompactTextString(m) }
func (*FixedPackages) ProtoMessage()    {}
func (*FixedPackages) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{24}
}
func (m *FixedPackages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackages.Unmarshal(m, b)
}
func (m *FixedPackages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackages.Marshal(b, m, deterministic)
}
func (dst *FixedPackages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackages.Merge(dst, src)
}
func (m *FixedPackages) XXX_Size() int {
	return xxx_messageInfo_FixedPackages.Size(m)
}
func (m *FixedPackages) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackages.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackages proto.InternalMessageInfo

func (m *FixedPackages) GetFixedPackage() []*FixedPackage {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

type OrderFee struct {
	// @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty" bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"`
	// @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
	AmountMerchantCurrency float64  `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty" bson:"amount_merchant_currency" structure:"amount_merchant_currency"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized       []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache          int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderFee) Reset()         { *m = OrderFee{} }
func (m *OrderFee) String() string { return proto.CompactTextString(m) }
func (*OrderFee) ProtoMessage()    {}
func (*OrderFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{25}
}
func (m *OrderFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFee.Unmarshal(m, b)
}
func (m *OrderFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFee.Marshal(b, m, deterministic)
}
func (dst *OrderFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFee.Merge(dst, src)
}
func (m *OrderFee) XXX_Size() int {
	return xxx_messageInfo_OrderFee.Size(m)
}
func (m *OrderFee) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFee.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFee proto.InternalMessageInfo

func (m *OrderFee) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFee) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

type OrderFeePsp struct {
	// @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty" bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"`
	// @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
	AmountMerchantCurrency float64 `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty" bson:"amount_merchant_currency" structure:"amount_merchant_currency"`
	// @inject_tag: bson:"amount_psp_currency" structure:"amount_psp_currency"
	AmountPspCurrency    float64  `protobuf:"fixed64,3,opt,name=AmountPspCurrency,proto3" json:"AmountPspCurrency,omitempty" bson:"amount_psp_currency" structure:"amount_psp_currency"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderFeePsp) Reset()         { *m = OrderFeePsp{} }
func (m *OrderFeePsp) String() string { return proto.CompactTextString(m) }
func (*OrderFeePsp) ProtoMessage()    {}
func (*OrderFeePsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{26}
}
func (m *OrderFeePsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFeePsp.Unmarshal(m, b)
}
func (m *OrderFeePsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFeePsp.Marshal(b, m, deterministic)
}
func (dst *OrderFeePsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFeePsp.Merge(dst, src)
}
func (m *OrderFeePsp) XXX_Size() int {
	return xxx_messageInfo_OrderFeePsp.Size(m)
}
func (m *OrderFeePsp) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFeePsp.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFeePsp proto.InternalMessageInfo

func (m *OrderFeePsp) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFeePsp) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

func (m *OrderFeePsp) GetAmountPspCurrency() float64 {
	if m != nil {
		return m.AmountPspCurrency
	}
	return 0
}

// Contain information about payment system commission in other currencies
type OrderFeePaymentSystem struct {
	// @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty" bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"`
	// @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
	AmountMerchantCurrency float64 `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty" bson:"amount_merchant_currency" structure:"amount_merchant_currency"`
	// @inject_tag: bson:"amount_payment_system_currency" structure:"amount_payment_system_currency"
	AmountPaymentSystemCurrency float64  `protobuf:"fixed64,3,opt,name=AmountPaymentSystemCurrency,proto3" json:"AmountPaymentSystemCurrency,omitempty" bson:"amount_payment_system_currency" structure:"amount_payment_system_currency"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized            []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache               int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderFeePaymentSystem) Reset()         { *m = OrderFeePaymentSystem{} }
func (m *OrderFeePaymentSystem) String() string { return proto.CompactTextString(m) }
func (*OrderFeePaymentSystem) ProtoMessage()    {}
func (*OrderFeePaymentSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{27}
}
func (m *OrderFeePaymentSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFeePaymentSystem.Unmarshal(m, b)
}
func (m *OrderFeePaymentSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFeePaymentSystem.Marshal(b, m, deterministic)
}
func (dst *OrderFeePaymentSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFeePaymentSystem.Merge(dst, src)
}
func (m *OrderFeePaymentSystem) XXX_Size() int {
	return xxx_messageInfo_OrderFeePaymentSystem.Size(m)
}
func (m *OrderFeePaymentSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFeePaymentSystem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFeePaymentSystem proto.InternalMessageInfo

func (m *OrderFeePaymentSystem) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFeePaymentSystem) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

func (m *OrderFeePaymentSystem) GetAmountPaymentSystemCurrency() float64 {
	if m != nil {
		return m.AmountPaymentSystemCurrency
	}
	return 0
}

type ProjectPaymentMethod struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"terminal"
	Terminal string `protobuf:"bytes,2,opt,name=terminal,proto3" json:"terminal,omitempty" bson:"terminal"`
	// @inject_tag: bson:"password"
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" bson:"password"`
	// @inject_tag: bson:"callback_password"
	CallbackPassword string `protobuf:"bytes,4,opt,name=callback_password,json=callbackPassword,proto3" json:"callback_password,omitempty" bson:"callback_password"`
	// @inject_tag: bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ProjectPaymentMethod) Reset()         { *m = ProjectPaymentMethod{} }
func (m *ProjectPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*ProjectPaymentMethod) ProtoMessage()    {}
func (*ProjectPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{28}
}
func (m *ProjectPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPaymentMethod.Unmarshal(m, b)
}
func (m *ProjectPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *ProjectPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPaymentMethod.Merge(dst, src)
}
func (m *ProjectPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_ProjectPaymentMethod.Size(m)
}
func (m *ProjectPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPaymentMethod proto.InternalMessageInfo

func (m *ProjectPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectPaymentMethod) GetTerminal() string {
	if m != nil {
		return m.Terminal
	}
	return ""
}

func (m *ProjectPaymentMethod) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ProjectPaymentMethod) GetCallbackPassword() string {
	if m != nil {
		return m.CallbackPassword
	}
	return ""
}

func (m *ProjectPaymentMethod) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CurrencyRate struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"currency_from"
	CurrencyFrom int32 `protobuf:"varint,2,opt,name=currency_from,json=currencyFrom,proto3" json:"currency_from,omitempty" bson:"currency_from"`
	// @inject_tag: bson:"currency_to"
	CurrencyTo int32 `protobuf:"varint,3,opt,name=currency_to,json=currencyTo,proto3" json:"currency_to,omitempty" bson:"currency_to"`
	// @inject_tag: bson:"rate"
	Rate float64 `protobuf:"fixed64,4,opt,name=rate,proto3" json:"rate,omitempty" bson:"rate"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"date"
	Date *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty" bson:"date"`
	// @inject_tag: bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CurrencyRate) Reset()         { *m = CurrencyRate{} }
func (m *CurrencyRate) String() string { return proto.CompactTextString(m) }
func (*CurrencyRate) ProtoMessage()    {}
func (*CurrencyRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{29}
}
func (m *CurrencyRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyRate.Unmarshal(m, b)
}
func (m *CurrencyRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyRate.Marshal(b, m, deterministic)
}
func (dst *CurrencyRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyRate.Merge(dst, src)
}
func (m *CurrencyRate) XXX_Size() int {
	return xxx_messageInfo_CurrencyRate.Size(m)
}
func (m *CurrencyRate) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyRate.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyRate proto.InternalMessageInfo

func (m *CurrencyRate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CurrencyRate) GetCurrencyFrom() int32 {
	if m != nil {
		return m.CurrencyFrom
	}
	return 0
}

func (m *CurrencyRate) GetCurrencyTo() int32 {
	if m != nil {
		return m.CurrencyTo
	}
	return 0
}

func (m *CurrencyRate) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CurrencyRate) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *CurrencyRate) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CurrencyRate) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type PaymentMethod struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"group_alias"
	Group string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty" bson:"group_alias"`
	// @inject_tag: bson:"currency"
	Currency *Currency `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty" bson:"currency"`
	// @inject_tag: bson:"currencies"
	Currencies []int32 `protobuf:"varint,5,rep,packed,name=currencies,proto3" json:"currencies,omitempty" bson:"currencies"`
	// @inject_tag: bson:"min_payment_amount"
	MinPaymentAmount float64 `protobuf:"fixed64,6,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount,omitempty" bson:"min_payment_amount"`
	// @inject_tag: bson:"max_payment_amount"
	MaxPaymentAmount float64 `protobuf:"fixed64,7,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount,omitempty" bson:"max_payment_amount"`
	// @inject_tag: bson:"params"
	Params *PaymentMethodParams `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty" bson:"params"`
	// @inject_tag: bson:"icon"
	Icon string `protobuf:"bytes,9,opt,name=Icon,proto3" json:"Icon,omitempty" bson:"icon"`
	// @inject_tag: bson:"payment_system"
	PaymentSystem *PaymentSystem `protobuf:"bytes,10,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty" bson:"payment_system"`
	// @inject_tag: bson:"type"
	Type string `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	// @inject_tag: bson:"account_regexp"
	AccountRegexp string `protobuf:"bytes,12,opt,name=account_regexp,json=accountRegexp,proto3" json:"account_regexp,omitempty" bson:"account_regexp"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethod) Reset()         { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()    {}
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{30}
}
func (m *PaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethod.Unmarshal(m, b)
}
func (m *PaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethod.Marshal(b, m, deterministic)
}
func (dst *PaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethod.Merge(dst, src)
}
func (m *PaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentMethod.Size(m)
}
func (m *PaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethod proto.InternalMessageInfo

func (m *PaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethod) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentMethod) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *PaymentMethod) GetCurrencies() []int32 {
	if m != nil {
		return m.Currencies
	}
	return nil
}

func (m *PaymentMethod) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetParams() *PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PaymentMethod) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *PaymentMethod) GetPaymentSystem() *PaymentSystem {
	if m != nil {
		return m.PaymentSystem
	}
	return nil
}

func (m *PaymentMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentMethod) GetAccountRegexp() string {
	if m != nil {
		return m.AccountRegexp
	}
	return ""
}

func (m *PaymentMethod) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentMethod) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentMethod) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Country struct {
	// @inject_tag: bson:"code_int" json:"code_int"
	CodeInt int32 `protobuf:"varint,1,opt,name=code_int,json=codeInt,proto3" json:"code_int" bson:"code_int"`
	// @inject_tag: bson:"code_a2" json:"code_a2"
	CodeA2 string `protobuf:"bytes,2,opt,name=code_a2,json=codeA2,proto3" json:"code_a2" bson:"code_a2"`
	// @inject_tag: bson:"code_a3" json:"code_a3"
	CodeA3 string `protobuf:"bytes,3,opt,name=code_a3,json=codeA3,proto3" json:"code_a3" bson:"code_a3"`
	// @inject_tag: bson:"name" json:"name"
	Name *Name `protobuf:"bytes,4,opt,name=name,proto3" json:"name" bson:"name"`
	// @inject_tag: bson:"is_active" json:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{31}
}
func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (dst *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(dst, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetCodeInt() int32 {
	if m != nil {
		return m.CodeInt
	}
	return 0
}

func (m *Country) GetCodeA2() string {
	if m != nil {
		return m.CodeA2
	}
	return ""
}

func (m *Country) GetCodeA3() string {
	if m != nil {
		return m.CodeA3
	}
	return ""
}

func (m *Country) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Country) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Country) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Country) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Vat struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"country"
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty" bson:"country"`
	// @inject_tag: bson:"subdivision_code"
	Subdivision string `protobuf:"bytes,3,opt,name=subdivision,proto3" json:"subdivision,omitempty" bson:"subdivision_code"`
	// @inject_tag: bson:"vat"
	Vat float64 `protobuf:"fixed64,4,opt,name=vat,proto3" json:"vat,omitempty" bson:"vat"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Vat) Reset()         { *m = Vat{} }
func (m *Vat) String() string { return proto.CompactTextString(m) }
func (*Vat) ProtoMessage()    {}
func (*Vat) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{32}
}
func (m *Vat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vat.Unmarshal(m, b)
}
func (m *Vat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vat.Marshal(b, m, deterministic)
}
func (dst *Vat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vat.Merge(dst, src)
}
func (m *Vat) XXX_Size() int {
	return xxx_messageInfo_Vat.Size(m)
}
func (m *Vat) XXX_DiscardUnknown() {
	xxx_messageInfo_Vat.DiscardUnknown(m)
}

var xxx_messageInfo_Vat proto.InternalMessageInfo

func (m *Vat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vat) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Vat) GetSubdivision() string {
	if m != nil {
		return m.Subdivision
	}
	return ""
}

func (m *Vat) GetVat() float64 {
	if m != nil {
		return m.Vat
	}
	return 0
}

func (m *Vat) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Vat) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Vat) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Commission struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"pm_id"
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty" bson:"pm_id"`
	// @inject_tag: bson:"project_id"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" bson:"project_id"`
	// @inject_tag: bson:"pm_commission"
	PaymentMethodCommission float64 `protobuf:"fixed64,4,opt,name=payment_method_commission,json=paymentMethodCommission,proto3" json:"payment_method_commission,omitempty" bson:"pm_commission"`
	// @inject_tag: bson:"psp_commission"
	PspCommission float64 `protobuf:"fixed64,5,opt,name=psp_commission,json=pspCommission,proto3" json:"psp_commission,omitempty" bson:"psp_commission"`
	// @inject_tag: bson:"total_commission_to_user"
	TotalCommissionToUser float64 `protobuf:"fixed64,6,opt,name=total_commission_to_user,json=totalCommissionToUser,proto3" json:"total_commission_to_user,omitempty" bson:"total_commission_to_user"`
	// @inject_tag: bson:"start_date"
	StartDate *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" bson:"start_date"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Commission) Reset()         { *m = Commission{} }
func (m *Commission) String() string { return proto.CompactTextString(m) }
func (*Commission) ProtoMessage()    {}
func (*Commission) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{33}
}
func (m *Commission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commission.Unmarshal(m, b)
}
func (m *Commission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commission.Marshal(b, m, deterministic)
}
func (dst *Commission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commission.Merge(dst, src)
}
func (m *Commission) XXX_Size() int {
	return xxx_messageInfo_Commission.Size(m)
}
func (m *Commission) XXX_DiscardUnknown() {
	xxx_messageInfo_Commission.DiscardUnknown(m)
}

var xxx_messageInfo_Commission proto.InternalMessageInfo

func (m *Commission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Commission) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *Commission) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Commission) GetPaymentMethodCommission() float64 {
	if m != nil {
		return m.PaymentMethodCommission
	}
	return 0
}

func (m *Commission) GetPspCommission() float64 {
	if m != nil {
		return m.PspCommission
	}
	return 0
}

func (m *Commission) GetTotalCommissionToUser() float64 {
	if m != nil {
		return m.TotalCommissionToUser
	}
	return 0
}

func (m *Commission) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *Commission) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Commission) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CardExpire struct {
	// @inject_tag: bson:"month"
	Month string `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty" bson:"month"`
	// @inject_tag: bson:"year"
	Year                 string   `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty" bson:"year"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CardExpire) Reset()         { *m = CardExpire{} }
func (m *CardExpire) String() string { return proto.CompactTextString(m) }
func (*CardExpire) ProtoMessage()    {}
func (*CardExpire) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{34}
}
func (m *CardExpire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardExpire.Unmarshal(m, b)
}
func (m *CardExpire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardExpire.Marshal(b, m, deterministic)
}
func (dst *CardExpire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardExpire.Merge(dst, src)
}
func (m *CardExpire) XXX_Size() int {
	return xxx_messageInfo_CardExpire.Size(m)
}
func (m *CardExpire) XXX_DiscardUnknown() {
	xxx_messageInfo_CardExpire.DiscardUnknown(m)
}

var xxx_messageInfo_CardExpire proto.InternalMessageInfo

func (m *CardExpire) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *CardExpire) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

type SavedCard struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pan                  string      `protobuf:"bytes,2,opt,name=pan,proto3" json:"pan,omitempty"`
	Expire               *CardExpire `protobuf:"bytes,3,opt,name=expire,proto3" json:"expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *SavedCard) Reset()         { *m = SavedCard{} }
func (m *SavedCard) String() string { return proto.CompactTextString(m) }
func (*SavedCard) ProtoMessage()    {}
func (*SavedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{35}
}
func (m *SavedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavedCard.Unmarshal(m, b)
}
func (m *SavedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavedCard.Marshal(b, m, deterministic)
}
func (dst *SavedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavedCard.Merge(dst, src)
}
func (m *SavedCard) XXX_Size() int {
	return xxx_messageInfo_SavedCard.Size(m)
}
func (m *SavedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_SavedCard.DiscardUnknown(m)
}

var xxx_messageInfo_SavedCard proto.InternalMessageInfo

func (m *SavedCard) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SavedCard) GetPan() string {
	if m != nil {
		return m.Pan
	}
	return ""
}

func (m *SavedCard) GetExpire() *CardExpire {
	if m != nil {
		return m.Expire
	}
	return nil
}

type PaymentFormPaymentMethod struct {
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"group_alias"
	Group         string `protobuf:"bytes,5,opt,name=group,proto3" json:"group_alias"`
	AccountRegexp string `protobuf:"bytes,6,opt,name=account_regexp,json=accountRegexp,proto3" json:"account_regexp,omitempty"`
	// @inject_tag: json:"has_saved_cards"
	HasSavedCards bool `protobuf:"varint,12,opt,name=has_saved_cards,json=hasSavedCards,proto3" json:"has_saved_cards"`
	// @inject_tag: json:"saved_cards,omitempty"
	SavedCards           []*SavedCard `protobuf:"bytes,13,rep,name=saved_cards,json=savedCards,proto3" json:"saved_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentFormPaymentMethod) Reset()         { *m = PaymentFormPaymentMethod{} }
func (m *PaymentFormPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentFormPaymentMethod) ProtoMessage()    {}
func (*PaymentFormPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{36}
}
func (m *PaymentFormPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentFormPaymentMethod.Unmarshal(m, b)
}
func (m *PaymentFormPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentFormPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *PaymentFormPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentFormPaymentMethod.Merge(dst, src)
}
func (m *PaymentFormPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentFormPaymentMethod.Size(m)
}
func (m *PaymentFormPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentFormPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentFormPaymentMethod proto.InternalMessageInfo

func (m *PaymentFormPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetAccountRegexp() string {
	if m != nil {
		return m.AccountRegexp
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetHasSavedCards() bool {
	if m != nil {
		return m.HasSavedCards
	}
	return false
}

func (m *PaymentFormPaymentMethod) GetSavedCards() []*SavedCard {
	if m != nil {
		return m.SavedCards
	}
	return nil
}

type MerchantPaymentMethodPerTransactionCommission struct {
	// @inject_tag: validate:"omitempty,numeric,gte=0" json:"fee"
	Fee float64 `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: json:"currency"
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodPerTransactionCommission) Reset() {
	*m = MerchantPaymentMethodPerTransactionCommission{}
}
func (m *MerchantPaymentMethodPerTransactionCommission) String() string {
	return proto.CompactTextString(m)
}
func (*MerchantPaymentMethodPerTransactionCommission) ProtoMessage() {}
func (*MerchantPaymentMethodPerTransactionCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{37}
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodPerTransactionCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Merge(dst, src)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Size(m)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission proto.InternalMessageInfo

func (m *MerchantPaymentMethodPerTransactionCommission) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MerchantPaymentMethodPerTransactionCommission) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type MerchantPaymentMethodCommissions struct {
	// @inject_tag: validate:"omitempty,numeric,gte=0,lte=100" json:"fee"
	Fee float64 `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee" validate:"omitempty,numeric,gte=0,lte=100"`
	// @inject_tag: validate:"required" json:"per_transaction"
	PerTransaction       *MerchantPaymentMethodPerTransactionCommission `protobuf:"bytes,2,opt,name=per_transaction,json=perTransaction,proto3" json:"per_transaction" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                                         `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                                          `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodCommissions) Reset()         { *m = MerchantPaymentMethodCommissions{} }
func (m *MerchantPaymentMethodCommissions) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodCommissions) ProtoMessage()    {}
func (*MerchantPaymentMethodCommissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{38}
}
func (m *MerchantPaymentMethodCommissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodCommissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodCommissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodCommissions.Merge(dst, src)
}
func (m *MerchantPaymentMethodCommissions) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Size(m)
}
func (m *MerchantPaymentMethodCommissions) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodCommissions.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodCommissions proto.InternalMessageInfo

func (m *MerchantPaymentMethodCommissions) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MerchantPaymentMethodCommissions) GetPerTransaction() *MerchantPaymentMethodPerTransactionCommission {
	if m != nil {
		return m.PerTransaction
	}
	return nil
}

type MerchantPaymentMethodIntegration struct {
	// @inject_tag: json:"terminal_id"
	TerminalId string `protobuf:"bytes,1,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id"`
	// @inject_tag: json:"terminal_password"
	TerminalPassword string `protobuf:"bytes,2,opt,name=terminal_password,json=terminalPassword,proto3" json:"terminal_password"`
	// @inject_tag: json:"terminal_callback_password"
	TerminalCallbackPassword string `protobuf:"bytes,3,opt,name=terminal_callback_password,json=terminalCallbackPassword,proto3" json:"terminal_callback_password"`
	// @inject_tag: json:"integrated"
	Integrated           bool     `protobuf:"varint,4,opt,name=integrated,proto3" json:"integrated"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodIntegration) Reset()         { *m = MerchantPaymentMethodIntegration{} }
func (m *MerchantPaymentMethodIntegration) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodIntegration) ProtoMessage()    {}
func (*MerchantPaymentMethodIntegration) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{39}
}
func (m *MerchantPaymentMethodIntegration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodIntegration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodIntegration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodIntegration.Merge(dst, src)
}
func (m *MerchantPaymentMethodIntegration) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Size(m)
}
func (m *MerchantPaymentMethodIntegration) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodIntegration.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodIntegration proto.InternalMessageInfo

func (m *MerchantPaymentMethodIntegration) GetTerminalId() string {
	if m != nil {
		return m.TerminalId
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetTerminalPassword() string {
	if m != nil {
		return m.TerminalPassword
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetTerminalCallbackPassword() string {
	if m != nil {
		return m.TerminalCallbackPassword
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetIntegrated() bool {
	if m != nil {
		return m.Integrated
	}
	return false
}

type MerchantPaymentMethodIdentification struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required" json:"name"
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodIdentification) Reset()         { *m = MerchantPaymentMethodIdentification{} }
func (m *MerchantPaymentMethodIdentification) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodIdentification) ProtoMessage()    {}
func (*MerchantPaymentMethodIdentification) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{40}
}
func (m *MerchantPaymentMethodIdentification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodIdentification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodIdentification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodIdentification.Merge(dst, src)
}
func (m *MerchantPaymentMethodIdentification) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Size(m)
}
func (m *MerchantPaymentMethodIdentification) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodIdentification.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodIdentification proto.InternalMessageInfo

func (m *MerchantPaymentMethodIdentification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantPaymentMethodIdentification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MerchantPaymentMethod struct {
	PaymentMethod        *MerchantPaymentMethodIdentification `protobuf:"bytes,3,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Commission           *MerchantPaymentMethodCommissions    `protobuf:"bytes,4,opt,name=commission,proto3" json:"commission,omitempty"`
	Integration          *MerchantPaymentMethodIntegration    `protobuf:"bytes,5,opt,name=integration,proto3" json:"integration,omitempty"`
	IsActive             bool                                 `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethod) Reset()         { *m = MerchantPaymentMethod{} }
func (m *MerchantPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethod) ProtoMessage()    {}
func (*MerchantPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{41}
}
func (m *MerchantPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethod.Unmarshal(m, b)
}
func (m *MerchantPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethod.Merge(dst, src)
}
func (m *MerchantPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethod.Size(m)
}
func (m *MerchantPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethod proto.InternalMessageInfo

func (m *MerchantPaymentMethod) GetPaymentMethod() *MerchantPaymentMethodIdentification {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *MerchantPaymentMethod) GetCommission() *MerchantPaymentMethodCommissions {
	if m != nil {
		return m.Commission
	}
	return nil
}

func (m *MerchantPaymentMethod) GetIntegration() *MerchantPaymentMethodIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

func (m *MerchantPaymentMethod) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type RefundPayerData struct {
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Zip                  string   `protobuf:"bytes,2,opt,name=zip,proto3" json:"zip,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RefundPayerData) Reset()         { *m = RefundPayerData{} }
func (m *RefundPayerData) String() string { return proto.CompactTextString(m) }
func (*RefundPayerData) ProtoMessage()    {}
func (*RefundPayerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{42}
}
func (m *RefundPayerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundPayerData.Unmarshal(m, b)
}
func (m *RefundPayerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundPayerData.Marshal(b, m, deterministic)
}
func (dst *RefundPayerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundPayerData.Merge(dst, src)
}
func (m *RefundPayerData) XXX_Size() int {
	return xxx_messageInfo_RefundPayerData.Size(m)
}
func (m *RefundPayerData) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundPayerData.DiscardUnknown(m)
}

var xxx_messageInfo_RefundPayerData proto.InternalMessageInfo

func (m *RefundPayerData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *RefundPayerData) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *RefundPayerData) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Refund struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              string               `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ExternalId           string               `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Amount               float64              `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatorId            string               `protobuf:"bytes,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Reason               string               `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Currency             *Currency            `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	Status               int32                `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PayerData            *RefundPayerData     `protobuf:"bytes,11,opt,name=payer_data,json=payerData,proto3" json:"payer_data,omitempty"`
	SalesTax             float32              `protobuf:"fixed32,12,opt,name=sales_tax,json=salesTax,proto3" json:"sales_tax,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Refund) Reset()         { *m = Refund{} }
func (m *Refund) String() string { return proto.CompactTextString(m) }
func (*Refund) ProtoMessage()    {}
func (*Refund) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{43}
}
func (m *Refund) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Refund.Unmarshal(m, b)
}
func (m *Refund) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Refund.Marshal(b, m, deterministic)
}
func (dst *Refund) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Refund.Merge(dst, src)
}
func (m *Refund) XXX_Size() int {
	return xxx_messageInfo_Refund.Size(m)
}
func (m *Refund) XXX_DiscardUnknown() {
	xxx_messageInfo_Refund.DiscardUnknown(m)
}

var xxx_messageInfo_Refund proto.InternalMessageInfo

func (m *Refund) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Refund) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Refund) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Refund) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Refund) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *Refund) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Refund) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *Refund) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Refund) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Refund) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Refund) GetPayerData() *RefundPayerData {
	if m != nil {
		return m.PayerData
	}
	return nil
}

func (m *Refund) GetSalesTax() float32 {
	if m != nil {
		return m.SalesTax
	}
	return 0
}

type Customer struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"-"
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"-"`
	// @inject_tag: json:"project_id" validate:"required,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"-"
	MerchantId string `protobuf:"bytes,4,opt,name=merchant_id,json=merchantId,proto3" json:"-"`
	// @inject_tag: json:"external_id"
	ExternalId string `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3" json:"external_id"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name"`
	// @inject_tag: json:"email" validate:"omitempty,email"
	Email string `protobuf:"bytes,7,opt,name=email,proto3" json:"email" validate:"omitempty,email"`
	// @inject_tag: json:"email_verified"
	EmailVerified bool `protobuf:"varint,8,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified"`
	// @inject_tag: json:"phone" validate:"omitempty,phone"
	Phone string `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone" validate:"omitempty,phone"`
	// @inject_tag: json:"phone_verified"
	PhoneVerified bool `protobuf:"varint,10,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified"`
	// @inject_tag: json:"ip" validate:"omitempty,ip"
	Ip string `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip" validate:"omitempty,ip"`
	// @inject_tag: json:"locale" validate:"omitempty,alpha,len=2"
	Locale string `protobuf:"bytes,12,opt,name=locale,proto3" json:"locale" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"address"
	Address *OrderBillingAddress `protobuf:"bytes,13,opt,name=address,proto3" json:"address"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	AcceptLanguage string `protobuf:"bytes,15,opt,name=accept_language,json=acceptLanguage,proto3" json:"-"`
	// @inject_tag: json:"-"
	UserAgent string `protobuf:"bytes,16,opt,name=user_agent,json=userAgent,proto3" json:"-"`
	// @inject_tag: json:"-"
	ExpireAt *timestamp.Timestamp `protobuf:"bytes,17,opt,name=expire_at,json=expireAt,proto3" json:"-"`
	// @inject_tag: json:"-"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"-"`
	// @inject_tag: json:"-"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"-"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_5ae36916283c7a5b, []int{44}
}
func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (dst *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(dst, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Customer) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Customer) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Customer) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *Customer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Customer) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *Customer) GetAddress() *OrderBillingAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Customer) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Customer) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *Customer) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Customer) GetExpireAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireAt
	}
	return nil
}

func (m *Customer) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Customer) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Name)(nil), "billing.Name")
	proto.RegisterType((*OrderCreateRequest)(nil), "billing.OrderCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.OtherEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.PrivateMetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.RawParamsEntry")
	proto.RegisterType((*Project)(nil), "billing.Project")
	proto.RegisterMapType((map[string]*FixedPackages)(nil), "billing.Project.FixedPackageEntry")
	proto.RegisterMapType((map[string]*ProjectPaymentMethod)(nil), "billing.Project.PaymentMethodsEntry")
	proto.RegisterType((*ProjectOrder)(nil), "billing.ProjectOrder")
	proto.RegisterType((*MerchantContact)(nil), "billing.MerchantContact")
	proto.RegisterType((*MerchantContactTechnical)(nil), "billing.MerchantContactTechnical")
	proto.RegisterType((*MerchantContactAuthorized)(nil), "billing.MerchantContactAuthorized")
	proto.RegisterType((*MerchantBanking)(nil), "billing.MerchantBanking")
	proto.RegisterType((*MerchantLastPayout)(nil), "billing.MerchantLastPayout")
	proto.RegisterType((*MerchantUser)(nil), "billing.MerchantUser")
	proto.RegisterType((*Merchant)(nil), "billing.Merchant")
	proto.RegisterMapType((map[string]*MerchantPaymentMethod)(nil), "billing.Merchant.PaymentMethodsEntry")
	proto.RegisterType((*SystemNotificationStatuses)(nil), "billing.SystemNotificationStatuses")
	proto.RegisterType((*Notification)(nil), "billing.Notification")
	proto.RegisterType((*OrderPlatformFee)(nil), "billing.OrderPlatformFee")
	proto.RegisterType((*OrderTax)(nil), "billing.OrderTax")
	proto.RegisterType((*OrderBillingAddress)(nil), "billing.OrderBillingAddress")
	proto.RegisterType((*Order)(nil), "billing.Order")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentMethodTxnParamsEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentRequisitesEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PrivateMetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.ProjectParamsEntry")
	proto.RegisterType((*OrderItem)(nil), "billing.OrderItem")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderItem.MetadataEntry")
	proto.RegisterType((*Currency)(nil), "billing.Currency")
	proto.RegisterType((*PayerData)(nil), "billing.PayerData")
	proto.RegisterType((*PaymentMethodOrder)(nil), "billing.PaymentMethodOrder")
	proto.RegisterType((*PaymentMethodParams)(nil), "billing.PaymentMethodParams")
	proto.RegisterMapType((map[string]string)(nil), "billing.PaymentMethodParams.OtherEntry")
	proto.RegisterType((*PaymentSystem)(nil), "billing.PaymentSystem")
	proto.RegisterType((*FixedPackage)(nil), "billing.FixedPackage")
	proto.RegisterType((*FixedPackages)(nil), "billing.FixedPackages")
	proto.RegisterType((*OrderFee)(nil), "billing.OrderFee")
	proto.RegisterType((*OrderFeePsp)(nil), "billing.OrderFeePsp")
	proto.RegisterType((*OrderFeePaymentSystem)(nil), "billing.OrderFeePaymentSystem")
	proto.RegisterType((*ProjectPaymentMethod)(nil), "billing.ProjectPaymentMethod")
	proto.RegisterType((*CurrencyRate)(nil), "billing.CurrencyRate")
	proto.RegisterType((*PaymentMethod)(nil), "billing.PaymentMethod")
	proto.RegisterType((*Country)(nil), "billing.Country")
	proto.RegisterType((*Vat)(nil), "billing.Vat")
	proto.RegisterType((*Commission)(nil), "billing.Commission")
	proto.RegisterType((*CardExpire)(nil), "billing.CardExpire")
	proto.RegisterType((*SavedCard)(nil), "billing.SavedCard")
	proto.RegisterType((*PaymentFormPaymentMethod)(nil), "billing.PaymentFormPaymentMethod")
	proto.RegisterType((*MerchantPaymentMethodPerTransactionCommission)(nil), "billing.MerchantPaymentMethodPerTransactionCommission")
	proto.RegisterType((*MerchantPaymentMethodCommissions)(nil), "billing.MerchantPaymentMethodCommissions")
	proto.RegisterType((*MerchantPaymentMethodIntegration)(nil), "billing.MerchantPaymentMethodIntegration")
	proto.RegisterType((*MerchantPaymentMethodIdentification)(nil), "billing.MerchantPaymentMethodIdentification")
	proto.RegisterType((*MerchantPaymentMethod)(nil), "billing.MerchantPaymentMethod")
	proto.RegisterType((*RefundPayerData)(nil), "billing.RefundPayerData")
	proto.RegisterType((*Refund)(nil), "billing.Refund")
	proto.RegisterType((*Customer)(nil), "billing.Customer")
	proto.RegisterMapType((map[string]string)(nil), "billing.Customer.MetadataEntry")
}

func init() { proto.RegisterFile("billing/billing.proto", fileDescriptor_billing_5ae36916283c7a5b) }

var fileDescriptor_billing_5ae36916283c7a5b = []byte{
	// 4639 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x3c, 0xc9, 0x72, 0x1c, 0x47,
	0x76, 0xd1, 0xdd, 0x40, 0x2f, 0xaf, 0xd1, 0x58, 0x12, 0x0b, 0x0b, 0x20, 0x29, 0x82, 0x4d, 0x71,
	0x11, 0x45, 0x82, 0x1c, 0x90, 0x23, 0x69, 0xb4, 0x84, 0x04, 0x82, 0xa4, 0xa7, 0x2d, 0x91, 0x42,
	0x14, 0x21, 0xda, 0x96, 0x3d, 0x2e, 0x27, 0xba, 0x12, 0x40, 0x0d, 0xbb, 0xab, 0x6a, 0x2a, 0xb3,
	0x49, 0x40, 0x27, 0x1f, 0x7c, 0xb0, 0x23, 0x7c, 0xb4, 0x75, 0xf7, 0x0f, 0xf8, 0xe4, 0xf9, 0x00,
	0x87, 0xc3, 0x3e, 0xd8, 0x11, 0xbe, 0xf8, 0x0b, 0x1c, 0x0e, 0xdf, 0x7d, 0xb0, 0xef, 0x8e, 0x5c,
	0x2b, 0x6b, 0xe9, 0x06, 0x9a, 0x72, 0x68, 0xc2, 0x73, 0x21, 0x2b, 0x33, 0xdf, 0x7b, 0x95, 0xf5,
	0xf2, 0xed, 0x2f, 0x1b, 0xb0, 0x7a, 0x10, 0x0c, 0x06, 0x41, 0x78, 0x74, 0x4f, 0xfd, 0xbf, 0x15,
	0x27, 0x11, 0x8b, 0x50, 0x43, 0x0d, 0x37, 0xae, 0x1c, 0x45, 0xd1, 0xd1, 0x80, 0xdc, 0x13, 0xd3,
	0x07, 0xa3, 0xc3, 0x7b, 0x2c, 0x18, 0x12, 0xca, 0xf0, 0x30, 0x96, 0x90, 0xdd, 0x1b, 0x30, 0xf3,
	0x1c, 0x0f, 0x09, 0x9a, 0x87, 0x2a, 0x09, 0x9d, 0xca, 0x66, 0xe5, 0x56, 0xcb, 0xad, 0x92, 0x90,
	0x8f, 0x93, 0x91, 0x53, 0x95, 0xe3, 0x64, 0xd4, 0xfd, 0xfb, 0x16, 0xa0, 0xaf, 0x13, 0x9f, 0x24,
	0xbb, 0x09, 0xc1, 0x8c, 0xb8, 0xe4, 0x57, 0x23, 0x42, 0x19, 0xba, 0x0c, 0x10, 0x27, 0xd1, 0x2f,
	0x49, 0x9f, 0x79, 0x81, 0xaf, 0xd0, 0x5b, 0x6a, 0xa6, 0xe7, 0xa3, 0x4b, 0xd0, 0xa2, 0xc1, 0x51,
	0x88, 0xd9, 0x28, 0x21, 0x8a, 0x58, 0x3a, 0x81, 0xd6, 0xa0, 0x8e, 0x87, 0xd1, 0x28, 0x64, 0x4e,
	0x6d, 0xb3, 0x72, 0xab, 0xe2, 0xaa, 0x11, 0xda, 0x80, 0x66, 0x7f, 0x94, 0x24, 0x24, 0xec, 0x9f,
	0x3a, 0x33, 0x02, 0xc9, 0x8c, 0x91, 0x03, 0x0d, 0xdc, 0xef, 0x0b, 0xa4, 0x59, 0xb1, 0xa4, 0x87,
	0x68, 0x1d, 0x9a, 0x11, 0xdf, 0x20, 0xdf, 0x48, 0x5d, 0x2e, 0x89, 0x71, 0xcf, 0x47, 0x9b, 0xd0,
	0xf6, 0x09, 0xed, 0x27, 0x41, 0xcc, 0x82, 0x28, 0x74, 0x1a, 0x62, 0xd5, 0x9e, 0x42, 0xd7, 0x61,
	0x3e, 0xc6, 0xa7, 0x43, 0x12, 0x32, 0x6f, 0x48, 0xd8, 0x71, 0xe4, 0x3b, 0x4d, 0x01, 0xd4, 0x51,
	0xb3, 0xcf, 0xc4, 0x24, 0xff, 0xdc, 0x51, 0x32, 0xf0, 0x5e, 0x93, 0x24, 0x38, 0x3c, 0x75, 0x5a,
	0xf2, 0x83, 0x46, 0xc9, 0xe0, 0xa5, 0x98, 0xd0, 0xcb, 0x61, 0xc4, 0xf8, 0x32, 0x98, 0xe5, 0xe7,
	0x62, 0x02, 0x5d, 0x81, 0x36, 0x5f, 0xa6, 0xa3, 0x7e, 0x9f, 0x50, 0xea, 0xb4, 0xc5, 0x3a, 0xc7,
	0x78, 0x21, 0x67, 0xf8, 0x27, 0x70, 0x80, 0x43, 0x1c, 0x0c, 0x9c, 0x39, 0xf9, 0x09, 0xa3, 0x64,
	0xf0, 0x14, 0x07, 0x03, 0x8e, 0x1b, 0xe3, 0x53, 0x92, 0x78, 0x64, 0xc8, 0x57, 0x3b, 0x12, 0x57,
	0x4c, 0x3d, 0x19, 0x66, 0x00, 0xe2, 0xe3, 0x28, 0x24, 0xce, 0xbc, 0x05, 0xb0, 0xc7, 0x67, 0x38,
	0xb7, 0x13, 0x72, 0xc4, 0xbf, 0x7f, 0x41, 0xac, 0xa9, 0x11, 0x7f, 0xa9, 0x44, 0x0c, 0x62, 0x67,
	0x51, 0xbe, 0x54, 0x8c, 0x7b, 0x31, 0xfa, 0x14, 0x66, 0x23, 0x76, 0x4c, 0x12, 0x67, 0x69, 0xb3,
	0x76, 0xab, 0xbd, 0x7d, 0x63, 0x4b, 0x4b, 0x59, 0x51, 0x12, 0xb6, 0xbe, 0xe6, 0x80, 0x4f, 0x42,
	0x96, 0x9c, 0xba, 0x12, 0x09, 0xf5, 0x00, 0x12, 0xfc, 0xc6, 0x8b, 0x71, 0x82, 0x87, 0xd4, 0x41,
	0x82, 0xc4, 0xed, 0x49, 0x24, 0x5c, 0xfc, 0x66, 0x4f, 0x00, 0x4b, 0x32, 0xad, 0x44, 0x8f, 0xf9,
	0x1e, 0x39, 0xa9, 0x83, 0xc8, 0x3f, 0x75, 0x96, 0xe5, 0x1e, 0x13, 0xfc, 0xe6, 0x51, 0xe4, 0x9f,
	0xa2, 0x0b, 0xd0, 0x08, 0xa8, 0xf7, 0x4b, 0x1a, 0x85, 0xce, 0xca, 0x66, 0xe5, 0x56, 0xd3, 0xad,
	0x07, 0xf4, 0x77, 0x69, 0x14, 0x72, 0x29, 0x1a, 0xe0, 0xf0, 0x68, 0x84, 0x8f, 0x88, 0xb3, 0x2a,
	0xa5, 0x48, 0x8f, 0xf9, 0x5a, 0x9c, 0x44, 0xfe, 0xa8, 0xcf, 0xa8, 0xb3, 0xb6, 0x59, 0xe3, 0x6b,
	0x7a, 0x8c, 0x9e, 0x40, 0x73, 0x48, 0x18, 0xf6, 0x31, 0xc3, 0xce, 0x05, 0xb1, 0xe9, 0xf7, 0x26,
	0x6d, 0xfa, 0x99, 0x82, 0x95, 0x7b, 0x36, 0xa8, 0xe8, 0x0f, 0x61, 0x31, 0x4e, 0x82, 0xd7, 0x98,
	0x11, 0xcf, 0x90, 0x73, 0x04, 0xb9, 0xfb, 0x93, 0xc8, 0xed, 0x49, 0x9c, 0x2c, 0xd5, 0x85, 0x38,
	0x3b, 0x8b, 0xae, 0xc3, 0xcc, 0x88, 0x92, 0xc4, 0x59, 0xdf, 0xac, 0xdc, 0x6a, 0x6f, 0x2f, 0x19,
	0x82, 0xbb, 0x23, 0xca, 0xa2, 0x21, 0x49, 0x5c, 0xb1, 0x8c, 0x56, 0x60, 0x96, 0x45, 0xaf, 0x48,
	0xe8, 0x6c, 0x88, 0xef, 0x97, 0x83, 0x8d, 0x8f, 0x00, 0xd2, 0xc3, 0x42, 0x8b, 0x50, 0x7b, 0x45,
	0x4e, 0x95, 0xea, 0xf2, 0x47, 0x8e, 0xf5, 0x1a, 0x0f, 0x46, 0x5a, 0x61, 0xe5, 0xe0, 0xe3, 0xea,
	0x47, 0x95, 0x8d, 0x4f, 0x61, 0x3e, 0x7b, 0x46, 0x53, 0x61, 0x7f, 0x02, 0x9d, 0xcc, 0x67, 0x4d,
	0x85, 0xfc, 0x08, 0x56, 0xca, 0x58, 0x33, 0x0d, 0x8d, 0xee, 0xbf, 0x03, 0x34, 0xf6, 0xa4, 0x6d,
	0xe2, 0xf6, 0xcd, 0x18, 0xac, 0x6a, 0xe0, 0xa3, 0xf7, 0x61, 0xa9, 0x8f, 0x07, 0x83, 0x03, 0xdc,
	0x7f, 0xe5, 0x19, 0xe3, 0x23, 0x29, 0x2c, 0xea, 0x85, 0x5d, 0x6d, 0x84, 0x6c, 0x60, 0x61, 0x46,
	0xfb, 0xd1, 0x40, 0xd8, 0x30, 0x0b, 0x78, 0x4f, 0xcd, 0xa3, 0x9f, 0xc1, 0x7a, 0x5f, 0x1c, 0xb1,
	0x27, 0xcd, 0x13, 0x1e, 0x0c, 0xa2, 0x37, 0xc4, 0xf7, 0x46, 0xc9, 0x80, 0x3a, 0x33, 0x42, 0xf8,
	0xd6, 0x24, 0x80, 0x10, 0x87, 0x1d, 0xb9, 0xfc, 0x4d, 0x32, 0xa0, 0xe8, 0x2e, 0x17, 0xc5, 0xa4,
	0x7f, 0x8c, 0x95, 0xb5, 0xb3, 0x8f, 0xfa, 0x99, 0x5a, 0x70, 0x0d, 0x08, 0x7f, 0x93, 0x20, 0xee,
	0xf9, 0xa7, 0x21, 0x1e, 0x06, 0x7d, 0x65, 0x88, 0xe4, 0x9b, 0xea, 0x42, 0x39, 0xd6, 0x04, 0xc0,
	0x63, 0xb9, 0x2e, 0xcd, 0x92, 0x78, 0xd3, 0x67, 0x70, 0x31, 0x8b, 0x9a, 0x10, 0x3f, 0x48, 0xb8,
	0x59, 0x17, 0xc8, 0x0d, 0x81, 0xec, 0xd8, 0xc8, 0xae, 0x02, 0x10, 0xe8, 0x37, 0x61, 0x61, 0x10,
	0x0c, 0x03, 0x46, 0x53, 0xde, 0x49, 0xfb, 0x39, 0x2f, 0xa7, 0x0d, 0xe7, 0xee, 0x00, 0x1a, 0xe2,
	0x13, 0x4f, 0xdb, 0x5a, 0x65, 0xfe, 0x5b, 0xc2, 0xfc, 0x2f, 0x0e, 0xf1, 0xc9, 0x9e, 0x5c, 0xd8,
	0x91, 0x8e, 0x80, 0x43, 0x07, 0x61, 0x1e, 0x1a, 0x14, 0x74, 0x10, 0x66, 0xa1, 0x11, 0xcc, 0x84,
	0x78, 0x48, 0x94, 0x5d, 0x15, 0xcf, 0xe8, 0x1a, 0x74, 0x14, 0x13, 0x84, 0xdd, 0xa4, 0xce, 0x9c,
	0x60, 0xf8, 0x9c, 0x9c, 0x14, 0x96, 0x93, 0xa2, 0xfb, 0xb0, 0x12, 0x50, 0x4f, 0x1b, 0x00, 0xaf,
	0x7f, 0x4c, 0xfa, 0xaf, 0xa2, 0x11, 0x13, 0x46, 0xb6, 0xe9, 0xa2, 0x80, 0xee, 0xa9, 0xa5, 0x5d,
	0xb5, 0xc2, 0x0d, 0x3d, 0x25, 0xfd, 0x84, 0x30, 0x8f, 0x0b, 0xdf, 0xbc, 0x72, 0x6c, 0x62, 0xe6,
	0x4b, 0x72, 0x8a, 0xee, 0x02, 0x32, 0x5e, 0xce, 0x4b, 0xc8, 0xaf, 0x46, 0x41, 0x42, 0x7c, 0x61,
	0x76, 0x9b, 0xee, 0x92, 0x59, 0x71, 0xd5, 0x02, 0xba, 0x0d, 0x4b, 0x94, 0x84, 0xbe, 0x67, 0xef,
	0x54, 0x98, 0xe2, 0xa6, 0xbb, 0xc0, 0x17, 0x9e, 0xa7, 0x9b, 0xe5, 0xb0, 0xdc, 0x45, 0x88, 0x3d,
	0x7a, 0xda, 0x13, 0x2e, 0x89, 0x0d, 0x2c, 0x8c, 0x92, 0x81, 0xd8, 0xe1, 0x8e, 0xf2, 0x88, 0x5b,
	0xb0, 0xcc, 0x61, 0xe3, 0x24, 0xe2, 0xde, 0x45, 0xb3, 0xd1, 0x41, 0x02, 0x9a, 0x93, 0xd9, 0x93,
	0x2b, 0x8a, 0x8d, 0x9a, 0xb6, 0x39, 0x7a, 0xe1, 0x87, 0x96, 0x0d, 0x6d, 0x7d, 0xe2, 0xc2, 0x1f,
	0xdd, 0x87, 0x95, 0x0c, 0xac, 0x76, 0x6a, 0x2b, 0x02, 0x1c, 0x59, 0xe0, 0xda, 0xb9, 0xfd, 0x0e,
	0x74, 0x0e, 0x83, 0x13, 0xe2, 0x7b, 0x31, 0xee, 0xbf, 0x92, 0x46, 0x99, 0x5b, 0xc3, 0xae, 0x91,
	0x68, 0xa5, 0x9a, 0x5b, 0x4f, 0x39, 0xd4, 0x9e, 0x04, 0x92, 0xf6, 0x6f, 0xee, 0xd0, 0x9a, 0x42,
	0xcf, 0x60, 0x21, 0xeb, 0xab, 0xa5, 0x0d, 0x6f, 0x6f, 0xbf, 0x5b, 0x20, 0xb5, 0x67, 0x7b, 0x6f,
	0xe5, 0x56, 0xe6, 0x33, 0x2e, 0x9d, 0xa2, 0x8b, 0xd0, 0x0a, 0xa8, 0x87, 0xfb, 0x2c, 0x78, 0x4d,
	0x9c, 0x0b, 0x82, 0xeb, 0xcd, 0x80, 0xee, 0x88, 0x31, 0xfa, 0x19, 0x80, 0xd4, 0x4d, 0xdf, 0xc3,
	0xcc, 0x71, 0x84, 0x0e, 0x6e, 0x6c, 0xc9, 0xa0, 0x6a, 0x4b, 0x07, 0x55, 0x5b, 0xfb, 0x3a, 0xa8,
	0x72, 0x5b, 0x0a, 0x7a, 0x87, 0x6b, 0x23, 0x8c, 0x62, 0x5f, 0xa3, 0xae, 0x9f, 0x8d, 0xaa, 0xa0,
	0x77, 0xd8, 0xc6, 0xef, 0xc1, 0x52, 0x81, 0x09, 0x25, 0x96, 0xee, 0x8e, 0x6d, 0xe9, 0xda, 0xdb,
	0x6b, 0xe6, 0xf3, 0x6d, 0x64, 0x6a, 0x5b, 0xd1, 0x3f, 0x81, 0xe5, 0x12, 0x96, 0x94, 0x90, 0x7e,
	0x90, 0x25, 0x7d, 0x39, 0xcf, 0xd9, 0x0c, 0x15, 0xdb, 0xc6, 0x7e, 0x5f, 0x83, 0x39, 0x05, 0x23,
	0xcc, 0x59, 0xc1, 0xd0, 0x6a, 0x2d, 0xad, 0x5a, 0x5a, 0x9a, 0x0b, 0x8c, 0x6a, 0x13, 0x03, 0xa3,
	0x99, 0x6c, 0x60, 0x54, 0xd0, 0xf0, 0xd9, 0x12, 0x0d, 0xcf, 0xea, 0x6b, 0x3d, 0xaf, 0xaf, 0xa5,
	0x0a, 0xd8, 0x98, 0x42, 0x01, 0x9b, 0x53, 0x29, 0x60, 0x6b, 0x9c, 0x02, 0x96, 0xfa, 0x15, 0x18,
	0xe3, 0x57, 0x6c, 0xe7, 0x30, 0x77, 0xa6, 0x73, 0xe8, 0x7e, 0x5f, 0x81, 0x05, 0x3d, 0xbd, 0x1b,
	0x85, 0x0c, 0xf7, 0x19, 0x7a, 0x04, 0x80, 0x47, 0xec, 0x38, 0x4a, 0x82, 0xef, 0x88, 0x3c, 0x23,
	0x5b, 0x1f, 0x73, 0xd0, 0x3b, 0x06, 0xd2, 0xb5, 0xb0, 0xd0, 0xe7, 0xd0, 0x62, 0xa4, 0x7f, 0x1c,
	0x06, 0x7d, 0x3c, 0x50, 0xd2, 0x72, 0x75, 0x1c, 0x89, 0x7d, 0x0d, 0xe8, 0xa6, 0x38, 0xdd, 0x6f,
	0xc1, 0x19, 0x07, 0x66, 0x84, 0xa5, 0x62, 0x09, 0xcb, 0x0a, 0xcc, 0xca, 0x03, 0x52, 0xfe, 0x5d,
	0x0c, 0xf8, 0xac, 0x0c, 0x7c, 0xa5, 0xf0, 0xc8, 0x41, 0xf7, 0x0d, 0xac, 0x8f, 0xfd, 0x8a, 0x1f,
	0x4a, 0x5c, 0x04, 0x91, 0x11, 0x0d, 0x44, 0x4a, 0xa1, 0xd2, 0x14, 0x3d, 0xee, 0xfe, 0xa3, 0xc5,
	0xed, 0x47, 0x38, 0x7c, 0x15, 0x84, 0x47, 0xfc, 0xc0, 0x8c, 0x77, 0xac, 0x14, 0x02, 0x37, 0xb9,
	0x60, 0x65, 0x3a, 0x65, 0x8a, 0xc2, 0xb3, 0x1f, 0xdf, 0x4f, 0x52, 0x25, 0xd1, 0x43, 0x9e, 0xc0,
	0x28, 0x61, 0xf4, 0xc2, 0xd1, 0xf0, 0x80, 0x24, 0x6a, 0x4b, 0x1d, 0x35, 0xfb, 0x5c, 0x4c, 0xf2,
	0x2f, 0xa1, 0x6f, 0x82, 0x43, 0x9d, 0x3c, 0xc9, 0x01, 0x27, 0xeb, 0x13, 0x26, 0xb4, 0x47, 0x65,
	0x4e, 0x6a, 0xd8, 0xfd, 0x23, 0x40, 0xfa, 0x33, 0xbe, 0xc2, 0x94, 0xab, 0x3d, 0x77, 0x7f, 0x5b,
	0x30, 0xc3, 0x4d, 0x95, 0xfa, 0x8a, 0x49, 0x46, 0x4d, 0xc0, 0x59, 0x89, 0x5e, 0xd5, 0x4e, 0xf4,
	0xba, 0x0f, 0x61, 0x4e, 0x53, 0xff, 0x86, 0x96, 0xd8, 0x8a, 0xd2, 0xd3, 0xe8, 0xfe, 0x27, 0x40,
	0x53, 0xa3, 0x15, 0x50, 0xde, 0x53, 0x91, 0xb1, 0x94, 0xc4, 0xd5, 0x82, 0x24, 0xf2, 0xf7, 0xa8,
	0xe8, 0x58, 0x33, 0x78, 0xc6, 0x62, 0xf0, 0x7b, 0xb0, 0x88, 0x07, 0x8c, 0x24, 0x21, 0xe6, 0xe6,
	0xdf, 0x13, 0xeb, 0x92, 0x55, 0x0b, 0xd6, 0xfc, 0x73, 0x75, 0x16, 0x6f, 0xc8, 0x01, 0x0d, 0x18,
	0xd1, 0x4c, 0x53, 0x43, 0x74, 0x1b, 0x1a, 0x82, 0xe7, 0xc9, 0xa9, 0x30, 0x22, 0xed, 0xed, 0xc5,
	0xf4, 0x9c, 0xe5, 0xbc, 0xab, 0x01, 0xc4, 0x81, 0x30, 0xce, 0xcb, 0xa6, 0x3a, 0x10, 0x3e, 0xe0,
	0x06, 0xf9, 0xbb, 0x20, 0x56, 0x86, 0x82, 0x3f, 0xf2, 0xcd, 0xf6, 0x03, 0xa6, 0x93, 0x4a, 0xf1,
	0x6c, 0x4b, 0x43, 0x3b, 0x2b, 0x0d, 0x77, 0x01, 0xa9, 0x47, 0x0f, 0xfb, 0xbe, 0x10, 0x49, 0xac,
	0x53, 0xca, 0x25, 0xb5, 0xb2, 0x63, 0x16, 0xd0, 0x3d, 0x58, 0xe6, 0xc9, 0x20, 0x65, 0x09, 0xe6,
	0x33, 0x5a, 0x82, 0x64, 0x92, 0x89, 0xec, 0x25, 0x25, 0x46, 0xab, 0x50, 0x67, 0xf8, 0x84, 0x67,
	0xda, 0xf3, 0x2a, 0xb3, 0xc0, 0x27, 0x3d, 0x1f, 0x3d, 0x84, 0x66, 0x5f, 0xaa, 0x19, 0x15, 0xd1,
	0x4e, 0x7b, 0xdb, 0x19, 0x67, 0x0a, 0x5c, 0x03, 0x89, 0xb6, 0xa1, 0x71, 0x20, 0x55, 0x44, 0x04,
	0x3d, 0x65, 0x48, 0x4a, 0x85, 0x5c, 0x0d, 0xc8, 0x25, 0x8a, 0x73, 0x6a, 0x44, 0x45, 0xec, 0x33,
	0xeb, 0xaa, 0x51, 0xce, 0x5f, 0xa3, 0xb7, 0xf7, 0xd7, 0xcb, 0x53, 0xf8, 0x6b, 0xf4, 0x18, 0x16,
	0x0f, 0x83, 0x84, 0xb2, 0x34, 0x52, 0x65, 0x22, 0x10, 0x9a, 0x4c, 0x60, 0x5e, 0xe0, 0xe8, 0x18,
	0x96, 0xa1, 0x77, 0x61, 0x3e, 0xa0, 0xde, 0x6b, 0xcc, 0x3c, 0x12, 0xe2, 0x83, 0x01, 0xf1, 0x45,
	0xda, 0xda, 0x74, 0xe7, 0x02, 0xfa, 0x12, 0xb3, 0x27, 0x72, 0x0e, 0x7d, 0x01, 0x97, 0x03, 0xea,
	0xf5, 0xa3, 0xe1, 0x30, 0xa0, 0x94, 0x1f, 0x16, 0x8b, 0x3c, 0x2e, 0xce, 0x06, 0x69, 0x4d, 0x20,
	0xad, 0x07, 0x74, 0xd7, 0xc0, 0xec, 0x47, 0x5c, 0xec, 0x35, 0x85, 0x87, 0xb0, 0x76, 0x8c, 0xa9,
	0xa7, 0x3d, 0x83, 0x97, 0x56, 0x68, 0x64, 0xf4, 0xb3, 0x72, 0x8c, 0xa9, 0x66, 0xfc, 0x0b, 0x53,
	0xac, 0xb9, 0x0d, 0x4b, 0x1c, 0x2b, 0xa6, 0xb1, 0x85, 0xe0, 0x48, 0x1f, 0x79, 0x8c, 0xe9, 0x1e,
	0x8d, 0x53, 0xd8, 0x4f, 0xa1, 0x3d, 0xc0, 0x92, 0x1d, 0x3c, 0x8e, 0x96, 0xb1, 0xcf, 0xc5, 0xc2,
	0xa9, 0xa6, 0x16, 0xc5, 0x85, 0x41, 0x6a, 0x5d, 0x64, 0x40, 0xc6, 0x5f, 0x42, 0x7c, 0x91, 0xb9,
	0x8a, 0x80, 0xec, 0x85, 0x18, 0xa3, 0xe7, 0xc5, 0xe0, 0xef, 0x92, 0x08, 0xfe, 0xae, 0x17, 0xc8,
	0x9f, 0x2b, 0xfa, 0xe3, 0x76, 0xf3, 0x28, 0x21, 0x44, 0x50, 0x64, 0xa7, 0x31, 0x71, 0x2e, 0x0b,
	0x81, 0xea, 0x98, 0xd9, 0xfd, 0xd3, 0x98, 0xa0, 0x9f, 0xc2, 0x85, 0x14, 0x8c, 0xf2, 0x7f, 0x5e,
	0x07, 0xd8, 0x13, 0xb6, 0xe9, 0x1d, 0xc9, 0x34, 0xb3, 0xfc, 0x82, 0x84, 0xec, 0x65, 0x80, 0x9f,
	0x71, 0xc7, 0x21, 0xd2, 0x9d, 0x60, 0xe0, 0xb1, 0x04, 0xf7, 0xb9, 0xdc, 0x7a, 0x83, 0x20, 0x7c,
	0xe5, 0x5c, 0x91, 0x1e, 0x9d, 0xaf, 0xec, 0xab, 0x85, 0xaf, 0x82, 0xf0, 0x95, 0x08, 0x43, 0x1e,
	0x78, 0xe9, 0x7b, 0x84, 0xf5, 0xd9, 0x94, 0xd6, 0x87, 0x3e, 0xd8, 0xd1, 0xf3, 0xdc, 0xfa, 0x6c,
	0xe0, 0xf3, 0x46, 0x72, 0x0f, 0xb3, 0x91, 0xdc, 0x3b, 0x05, 0x36, 0x8d, 0x0d, 0xe5, 0xbe, 0x80,
	0x8d, 0x17, 0xa7, 0x94, 0x91, 0xa1, 0x08, 0x7f, 0x82, 0xbe, 0x30, 0x00, 0x2f, 0x84, 0x9e, 0x11,
	0xca, 0x0d, 0xd2, 0x61, 0x12, 0x0d, 0xc5, 0xab, 0x66, 0x5d, 0xf1, 0xcc, 0x8d, 0x31, 0x8b, 0xc4,
	0x8b, 0x66, 0xdd, 0x2a, 0x8b, 0xba, 0xff, 0x53, 0x85, 0x39, 0x1b, 0xb9, 0xcc, 0xc0, 0xb3, 0x80,
	0x0d, 0x4c, 0xae, 0x2e, 0x06, 0xdc, 0xae, 0x0d, 0x09, 0xa5, 0x3c, 0x47, 0x50, 0x5e, 0x4e, 0x0d,
	0x79, 0xa0, 0x68, 0xc4, 0x36, 0xf0, 0x95, 0xe5, 0x06, 0x3d, 0xd5, 0xf3, 0xd1, 0x05, 0x68, 0x08,
	0x65, 0x08, 0x7c, 0x65, 0xb6, 0xeb, 0x7c, 0xd8, 0xf3, 0xb5, 0x50, 0x89, 0xef, 0x51, 0xb9, 0x30,
	0x17, 0x2a, 0x31, 0x56, 0x35, 0xa4, 0x84, 0x60, 0x5f, 0x45, 0x7d, 0xf5, 0x80, 0xba, 0x04, 0xf3,
	0xe0, 0xa6, 0x49, 0xd5, 0x07, 0x0b, 0x03, 0xdd, 0xde, 0xbe, 0x66, 0xf8, 0x37, 0x9e, 0x37, 0xae,
	0x41, 0xca, 0xd9, 0xa3, 0xd6, 0xdb, 0xdb, 0x23, 0x98, 0xc2, 0x1e, 0x75, 0x87, 0xb0, 0x28, 0x82,
	0xef, 0xbd, 0x01, 0x66, 0x87, 0x51, 0x32, 0x7c, 0x4a, 0x6c, 0x1f, 0xcc, 0xd9, 0x5f, 0x2d, 0x2d,
	0xb6, 0x56, 0x73, 0xc5, 0xd6, 0xeb, 0x30, 0x4f, 0x0e, 0x0f, 0x89, 0x48, 0x85, 0xbc, 0x84, 0x7b,
	0xa9, 0x9a, 0xc0, 0xed, 0x98, 0x59, 0x17, 0x33, 0xd2, 0x3d, 0x84, 0xa6, 0x78, 0xdd, 0x3e, 0x3e,
	0xe1, 0x62, 0x21, 0xb4, 0x48, 0x05, 0x55, 0xfc, 0x99, 0xcf, 0x09, 0xe4, 0xaa, 0x40, 0x16, 0xcf,
	0xb9, 0xda, 0x6f, 0xf5, 0x3c, 0xb5, 0xdf, 0xee, 0x77, 0xb0, 0x2c, 0xde, 0xf3, 0x48, 0x9e, 0xc0,
	0x8e, 0x72, 0x76, 0x4e, 0xea, 0x6e, 0xe5, 0x5b, 0x8d, 0x73, 0xd5, 0x4e, 0xb3, 0x6a, 0x39, 0xcd,
	0x2b, 0xd0, 0x8e, 0x23, 0xca, 0xf0, 0xc0, 0xeb, 0x47, 0xbe, 0x16, 0x30, 0x90, 0x53, 0xbb, 0x91,
	0x4f, 0x52, 0x8f, 0x3c, 0x63, 0x79, 0xe4, 0xee, 0x5f, 0xac, 0xc3, 0x6c, 0x79, 0x42, 0x73, 0x0f,
	0x1a, 0xaa, 0xe0, 0x5d, 0x08, 0x3a, 0xec, 0x44, 0xc8, 0xd5, 0x50, 0xe8, 0x16, 0x2c, 0xea, 0x9a,
	0xb9, 0x29, 0x58, 0xcb, 0x6d, 0xcc, 0xc7, 0x16, 0x42, 0xcf, 0x47, 0x37, 0x61, 0x41, 0x43, 0xea,
	0x4c, 0x63, 0x26, 0x03, 0xa8, 0x13, 0x8d, 0x5c, 0x81, 0x7b, 0xb6, 0x58, 0xe0, 0xde, 0x86, 0x55,
	0x53, 0xa8, 0x0f, 0xfb, 0xd1, 0x90, 0xe8, 0x6a, 0x4a, 0x5d, 0x44, 0x64, 0xcb, 0xba, 0x66, 0x2f,
	0xd6, 0x54, 0x41, 0xa5, 0x07, 0x17, 0x72, 0x38, 0xe6, 0x68, 0x1a, 0xe3, 0xe2, 0xd7, 0xd5, 0x0c,
	0x21, 0x53, 0xf7, 0x79, 0x08, 0x6b, 0xe6, 0x9b, 0x47, 0xcc, 0x7e, 0x7f, 0x53, 0xbc, 0x7f, 0x45,
	0x7f, 0xb9, 0x5c, 0x54, 0x1b, 0xf8, 0x12, 0x9c, 0x3c, 0x96, 0xd9, 0x41, 0x6b, 0xdc, 0x0e, 0xd6,
	0xb2, 0xa4, 0xcc, 0x16, 0xbe, 0x81, 0x75, 0x4d, 0x4c, 0x38, 0xa7, 0x44, 0x56, 0x5c, 0xcf, 0xab,
	0x5e, 0x9a, 0x2c, 0x77, 0x5a, 0xae, 0x46, 0xdd, 0x61, 0xe8, 0xe7, 0xa0, 0x0f, 0x43, 0x57, 0xba,
	0xdb, 0xc2, 0x1f, 0x5d, 0xcd, 0x56, 0x79, 0xd3, 0xc4, 0x39, 0x2d, 0x70, 0x77, 0x62, 0x7b, 0x0e,
	0xfd, 0x04, 0x64, 0xb9, 0xde, 0x13, 0xb5, 0x62, 0x99, 0xd2, 0xa1, 0x54, 0x96, 0xf8, 0xd2, 0x63,
	0xcc, 0xb0, 0xdb, 0x8a, 0xf5, 0x23, 0x7a, 0x54, 0x68, 0x5b, 0x74, 0x72, 0xbe, 0x36, 0x63, 0xdd,
	0xa5, 0x20, 0xe6, 0x7a, 0x1a, 0x3f, 0x85, 0x0b, 0x59, 0x1a, 0xa9, 0x54, 0xca, 0xe0, 0x6e, 0x25,
	0x2e, 0xd0, 0xe8, 0xf9, 0x68, 0x07, 0x2e, 0xe7, 0xd1, 0xb2, 0x07, 0xbb, 0x20, 0x0e, 0x76, 0x23,
	0x8b, 0x9c, 0x39, 0xde, 0xdf, 0x87, 0x2b, 0x63, 0x48, 0x98, 0x53, 0x5e, 0x1c, 0x77, 0xca, 0x97,
	0xca, 0xe8, 0x9a, 0xb3, 0xfe, 0x1c, 0x2e, 0xe5, 0x28, 0x67, 0x85, 0x7e, 0x49, 0xec, 0x6d, 0x3d,
	0x43, 0x23, 0x23, 0xfa, 0x2f, 0xe1, 0x9d, 0x72, 0x02, 0x66, 0x67, 0x68, 0xdc, 0xce, 0x2e, 0x96,
	0x50, 0x35, 0x1b, 0xfb, 0xe3, 0x02, 0x5d, 0xc9, 0xec, 0xfe, 0x20, 0xa2, 0xe7, 0x0d, 0x3c, 0x37,
	0x8a, 0xe7, 0xb1, 0x2b, 0xd0, 0x77, 0x98, 0x15, 0x17, 0xaf, 0x4c, 0x88, 0x8b, 0x57, 0xdf, 0xde,
	0x0f, 0xad, 0x4d, 0x13, 0x17, 0xdf, 0x80, 0x05, 0xd5, 0x9b, 0xd1, 0xda, 0xa6, 0x42, 0xcc, 0x8e,
	0xec, 0xd1, 0xe8, 0x2e, 0xe2, 0xcf, 0xe1, 0xaa, 0x3c, 0x18, 0x2f, 0x08, 0x45, 0x84, 0xa9, 0xac,
	0x1d, 0x8f, 0x98, 0x0c, 0xc3, 0x1d, 0x71, 0x66, 0x97, 0x25, 0x60, 0x2f, 0xdc, 0xa3, 0xf1, 0x8e,
	0x81, 0x32, 0xfc, 0x75, 0xe1, 0x46, 0x4a, 0xc9, 0x84, 0x0a, 0x65, 0xe4, 0xd6, 0x05, 0xb9, 0xae,
	0x26, 0xa7, 0xa3, 0xa1, 0x12, 0x9a, 0xfb, 0x70, 0x53, 0xd1, 0x8c, 0x46, 0x6c, 0x32, 0xd1, 0x0d,
	0x41, 0xf4, 0x9a, 0x04, 0xff, 0x7a, 0xc4, 0x26, 0x50, 0xfd, 0x05, 0xdc, 0xb1, 0xbe, 0x59, 0xc9,
	0x84, 0x8c, 0x4f, 0x4a, 0x49, 0x5f, 0x14, 0xa4, 0x6f, 0x9a, 0xcf, 0x97, 0x18, 0x32, 0x08, 0x29,
	0x21, 0x5f, 0xd4, 0x00, 0x69, 0x5b, 0xb4, 0x1f, 0xb9, 0x24, 0x54, 0x3b, 0xab, 0x01, 0xc2, 0xc4,
	0x68, 0x97, 0x42, 0x60, 0x3d, 0x47, 0x80, 0x9d, 0x84, 0xda, 0xc4, 0x5d, 0x2e, 0x6b, 0xe6, 0x65,
	0x6d, 0xcd, 0xfe, 0x49, 0x68, 0xdb, 0xba, 0xb5, 0xb8, 0x74, 0x11, 0xed, 0x03, 0xd2, 0xaf, 0x11,
	0x85, 0x72, 0x9e, 0x40, 0x53, 0xe7, 0x4a, 0x2e, 0xa4, 0xcf, 0xd0, 0x77, 0x0d, 0x9c, 0x24, 0xbd,
	0x14, 0xe7, 0xe7, 0xd1, 0xc7, 0x30, 0xcf, 0xc5, 0xe8, 0x90, 0x18, 0x8d, 0xdf, 0x14, 0x72, 0xbb,
	0x92, 0xa5, 0xf8, 0x94, 0x90, 0x3d, 0x1a, 0xbb, 0x73, 0x31, 0x8d, 0x9f, 0x12, 0xad, 0xfa, 0x9f,
	0x03, 0xd2, 0x06, 0xdd, 0xc2, 0xbf, 0x9a, 0x53, 0x77, 0x8d, 0xef, 0x6a, 0x5f, 0x9e, 0x12, 0xf8,
	0x02, 0x96, 0x59, 0xa4, 0xd8, 0x6d, 0x51, 0xe8, 0x8e, 0xa5, 0xc0, 0x22, 0xc1, 0xf9, 0x94, 0xc2,
	0x1f, 0xa4, 0xbc, 0x57, 0x12, 0x61, 0xd1, 0x79, 0x37, 0x17, 0xc7, 0x9b, 0x2f, 0xb1, 0x25, 0xc2,
	0xf0, 0x5b, 0x0e, 0x53, 0xd2, 0xd7, 0xa0, 0xc6, 0xf0, 0x89, 0x73, 0xbd, 0x6c, 0x33, 0xfb, 0xf8,
	0xc4, 0xe5, 0xab, 0x3c, 0x6e, 0x1a, 0x8d, 0x02, 0xdf, 0xb9, 0x21, 0xe3, 0x26, 0xfe, 0x8c, 0xf6,
	0x61, 0x9d, 0x9c, 0xc4, 0x41, 0x42, 0xb8, 0x7b, 0x22, 0x3c, 0xeb, 0xe4, 0x91, 0xa5, 0x17, 0x84,
	0xf1, 0x88, 0x39, 0x37, 0xcf, 0xb4, 0x0a, 0xab, 0x12, 0xf9, 0x31, 0x66, 0x64, 0x3f, 0x7a, 0x1a,
	0x25, 0xc3, 0x1e, 0x47, 0x44, 0xf7, 0x61, 0x85, 0x45, 0x3c, 0x18, 0xcb, 0xf5, 0x78, 0xde, 0x17,
	0xd2, 0x8e, 0xc4, 0x5a, 0xb6, 0xcb, 0xf3, 0x04, 0x16, 0xd4, 0xa6, 0x3d, 0x5d, 0xfc, 0xb8, 0x23,
	0xde, 0x7e, 0x29, 0xfb, 0x31, 0xd9, 0x20, 0xd1, 0x9d, 0x3f, 0xc8, 0x06, 0x8d, 0xba, 0x83, 0x7a,
	0x77, 0x72, 0x07, 0xf5, 0x13, 0xd8, 0x10, 0xf9, 0x84, 0xae, 0xa6, 0x70, 0xd7, 0x9c, 0x76, 0x74,
	0xb6, 0x84, 0x31, 0xbb, 0xc0, 0x21, 0x14, 0x5d, 0xe1, 0xa0, 0x75, 0x5f, 0xc7, 0xee, 0x32, 0xdf,
	0xcb, 0x75, 0x99, 0x6f, 0xc1, 0x6c, 0xc0, 0xc8, 0x90, 0x3a, 0xf7, 0x85, 0xa8, 0xa3, 0xec, 0xe6,
	0x7b, 0xfc, 0x08, 0x25, 0x80, 0x15, 0x29, 0xff, 0x64, 0xec, 0x2d, 0x89, 0xed, 0x5c, 0xe0, 0xfe,
	0x91, 0xd5, 0xc3, 0x7e, 0x20, 0x5e, 0x90, 0xe3, 0xce, 0xd8, 0xb6, 0xf5, 0xf3, 0x92, 0xb6, 0xf5,
	0x43, 0x41, 0xe1, 0x5a, 0x21, 0xa0, 0x39, 0x47, 0xa7, 0x7a, 0xe3, 0x0b, 0x40, 0xc5, 0xc8, 0x67,
	0xaa, 0xce, 0x6f, 0x0f, 0x2e, 0x4e, 0x30, 0x2c, 0x53, 0x91, 0x7a, 0x0c, 0x6b, 0xe5, 0x36, 0xe4,
	0xff, 0x57, 0x1f, 0xfb, 0x9f, 0x6b, 0xd0, 0x32, 0x62, 0x52, 0xc8, 0x47, 0xd6, 0xa0, 0x1e, 0x1d,
	0x98, 0x74, 0xa4, 0xe5, 0xaa, 0x11, 0x7f, 0x03, 0x7d, 0x35, 0x52, 0x99, 0x06, 0x7f, 0x2c, 0x2d,
	0x80, 0x9e, 0x9d, 0x49, 0xa4, 0xf2, 0x58, 0x1f, 0x2b, 0x8f, 0x8d, 0x9c, 0x3c, 0xae, 0x41, 0x3d,
	0x18, 0xe2, 0x23, 0x91, 0x45, 0x73, 0x3d, 0x50, 0x23, 0xbe, 0xa7, 0x51, 0x32, 0xd0, 0x75, 0xce,
	0x51, 0x32, 0x40, 0x9f, 0x5a, 0x92, 0x0b, 0x42, 0xee, 0x36, 0x8b, 0xaa, 0x31, 0x56, 0x7a, 0xb3,
	0x61, 0x4e, 0xfb, 0xed, 0xc3, 0x9c, 0xb9, 0x69, 0xda, 0x75, 0x3f, 0x44, 0x20, 0xba, 0xff, 0x5d,
	0x81, 0xa6, 0xf1, 0xda, 0xeb, 0xd0, 0xe4, 0x59, 0xa9, 0x17, 0xa8, 0x34, 0x7d, 0x96, 0xe7, 0xb2,
	0x3e, 0xe9, 0x85, 0x0c, 0x5d, 0x00, 0xf1, 0xe8, 0xe1, 0x07, 0xfa, 0x5c, 0xf9, 0x70, 0xe7, 0x01,
	0xba, 0x6a, 0x9d, 0x62, 0x7b, 0xbb, 0x63, 0xb8, 0xf5, 0x1c, 0x0f, 0x89, 0x3a, 0xd4, 0x4c, 0x8b,
	0x73, 0x76, 0x62, 0x8b, 0xb3, 0xfe, 0xf6, 0x3c, 0x6b, 0x4c, 0x53, 0xa2, 0xf8, 0xbe, 0x0a, 0x2d,
	0x93, 0xd2, 0x08, 0x19, 0x8e, 0x8d, 0x0c, 0xc7, 0x76, 0x4a, 0x5f, 0xcd, 0xa6, 0xf4, 0xf7, 0x61,
	0x4e, 0x3d, 0xca, 0xf2, 0x58, 0xad, 0xec, 0xab, 0xdb, 0x0a, 0x44, 0xd4, 0xe9, 0xaf, 0xaa, 0x22,
	0x40, 0x39, 0x7f, 0x44, 0x4d, 0x40, 0x95, 0xdb, 0x67, 0xd3, 0x72, 0xbb, 0x29, 0x02, 0xd4, 0xed,
	0xb2, 0xbc, 0x7d, 0xa5, 0xa8, 0x51, 0xbc, 0x52, 0xc4, 0x82, 0x21, 0xf9, 0x2e, 0x0a, 0x89, 0x92,
	0x67, 0x33, 0x4e, 0xfb, 0x47, 0x60, 0xf7, 0x8f, 0x4c, 0x77, 0xa3, 0x6d, 0x77, 0x37, 0xfe, 0xa1,
	0x02, 0xa8, 0x98, 0xb4, 0x9d, 0xab, 0x8d, 0xfa, 0x10, 0xea, 0x2a, 0x3e, 0xab, 0xe5, 0x3c, 0xe2,
	0x5e, 0x36, 0xcc, 0xe3, 0x30, 0xae, 0x82, 0x45, 0x9f, 0xa5, 0x39, 0xa4, 0x2a, 0x8f, 0xcd, 0xe4,
	0xda, 0xc9, 0xd9, 0xc8, 0xa2, 0x93, 0x89, 0x2c, 0xf8, 0x57, 0x1c, 0x25, 0xd1, 0x48, 0x73, 0x4f,
	0x0e, 0xba, 0x7f, 0x5b, 0xcd, 0xd5, 0x27, 0x55, 0xb8, 0xe7, 0x40, 0xe3, 0x18, 0x87, 0xfe, 0x80,
	0x24, 0xba, 0x56, 0xa3, 0x86, 0x82, 0x7f, 0x24, 0x19, 0x06, 0x21, 0xd6, 0xed, 0x1e, 0x33, 0x16,
	0x8e, 0x14, 0x53, 0xfa, 0x26, 0x4a, 0x74, 0xa5, 0xc4, 0x8c, 0xb3, 0x3d, 0x53, 0x0d, 0x34, 0x9b,
	0xeb, 0x99, 0x6a, 0xe0, 0x2b, 0xd0, 0x26, 0x27, 0xa2, 0x8d, 0x33, 0x48, 0xaf, 0x09, 0x82, 0x9e,
	0xea, 0xf9, 0xe8, 0x33, 0x7d, 0xe3, 0xad, 0x21, 0x6c, 0xcf, 0xcd, 0x49, 0x1c, 0x2c, 0x5e, 0x79,
	0x7b, 0xfb, 0xab, 0x55, 0xdd, 0xff, 0xa8, 0x42, 0x27, 0xc3, 0xe7, 0x73, 0x9d, 0xf8, 0x6d, 0x68,
	0xa8, 0x8e, 0x92, 0x3a, 0xf2, 0x92, 0x4e, 0x93, 0x7a, 0x40, 0x8f, 0x60, 0xb9, 0x2c, 0xaf, 0x98,
	0x19, 0x97, 0xc7, 0x22, 0x5c, 0xcc, 0x2a, 0xde, 0x87, 0x25, 0x8b, 0x46, 0x4c, 0x92, 0x20, 0x32,
	0xcc, 0x4e, 0x17, 0xf6, 0xc4, 0x7c, 0xd6, 0xea, 0xd4, 0x27, 0x5a, 0x9d, 0xc6, 0xdb, 0x5b, 0x9d,
	0xe6, 0x34, 0x56, 0xe7, 0xaf, 0x2a, 0x30, 0x67, 0x5f, 0x8e, 0x38, 0x17, 0x93, 0xed, 0xbe, 0x6d,
	0xed, 0xec, 0xbe, 0x2d, 0x57, 0xf6, 0x24, 0xe8, 0x4b, 0x83, 0x5c, 0x71, 0xe5, 0x60, 0xa2, 0x09,
	0xee, 0x7e, 0x09, 0x9d, 0xcc, 0x95, 0x0d, 0xf4, 0x71, 0xfe, 0xae, 0x4c, 0x45, 0x88, 0xe3, 0x6a,
	0xe9, 0x0d, 0x8f, 0xec, 0xf5, 0x98, 0xee, 0x9f, 0x55, 0x54, 0x39, 0xf6, 0x29, 0x21, 0xe8, 0x0b,
	0xb8, 0x28, 0xe3, 0xe6, 0x8c, 0xfc, 0xee, 0xda, 0x6d, 0xe8, 0x8a, 0x3b, 0x09, 0x04, 0x7d, 0x00,
	0x6b, 0x72, 0xd9, 0x34, 0xf0, 0xec, 0x6a, 0x71, 0xc5, 0x1d, 0xb3, 0xda, 0xfd, 0x75, 0x05, 0xda,
	0x56, 0x92, 0xf5, 0x9b, 0xdb, 0x09, 0xba, 0x03, 0x4b, 0x8a, 0x2c, 0x8d, 0x77, 0xed, 0x83, 0xac,
	0xb8, 0xc5, 0x85, 0xee, 0xbf, 0x55, 0x60, 0xb5, 0x34, 0xa5, 0xfa, 0x0d, 0x7e, 0x41, 0xfe, 0xcd,
	0x72, 0x43, 0xb9, 0x6f, 0x99, 0x04, 0xd2, 0xfd, 0xa7, 0x0a, 0x8f, 0x3b, 0x8b, 0x57, 0x77, 0x0a,
	0x0a, 0xf0, 0x7f, 0x6a, 0x86, 0x67, 0xc6, 0x98, 0xe1, 0xac, 0xf2, 0xcf, 0x4e, 0xa1, 0xfc, 0xdd,
	0x3f, 0xad, 0xc2, 0x9c, 0x51, 0x3a, 0xee, 0x93, 0xf3, 0x1f, 0x70, 0x0d, 0x3a, 0x5a, 0x15, 0x3d,
	0xd1, 0xa0, 0x92, 0xed, 0xa8, 0x39, 0x3d, 0xf9, 0x34, 0x89, 0x86, 0xdc, 0x0f, 0x18, 0x20, 0x16,
	0x89, 0x8f, 0x99, 0x75, 0x41, 0x4f, 0xed, 0x47, 0xa6, 0x65, 0x21, 0x75, 0x58, 0xb6, 0x2c, 0x26,
	0x46, 0x51, 0xfa, 0x4a, 0x44, 0xfd, 0x9c, 0x57, 0x22, 0xde, 0xde, 0xfe, 0x75, 0xff, 0x65, 0xc6,
	0xb8, 0x8a, 0x31, 0x87, 0x58, 0x66, 0xc5, 0x8c, 0x9f, 0xae, 0x59, 0x7e, 0x3a, 0x63, 0xdb, 0x66,
	0xce, 0xb6, 0x6d, 0xef, 0x80, 0x66, 0x52, 0x40, 0xe4, 0x4d, 0xab, 0x94, 0x6d, 0x01, 0xa1, 0x63,
	0x2e, 0x6c, 0xd6, 0xc7, 0x5c, 0xd8, 0x2c, 0xbf, 0x0c, 0xda, 0x18, 0x73, 0x19, 0x34, 0x8d, 0x6e,
	0x9a, 0x53, 0x44, 0x37, 0x08, 0x66, 0x7a, 0xfd, 0x28, 0x54, 0x21, 0x99, 0x78, 0x2e, 0x89, 0x78,
	0x60, 0x9a, 0x88, 0x47, 0xb7, 0xb8, 0xda, 0x56, 0x8b, 0xcb, 0xba, 0x7e, 0x93, 0x90, 0x23, 0x72,
	0x12, 0xab, 0xcb, 0x16, 0xfa, 0xfa, 0x8d, 0x2b, 0x26, 0xb3, 0x22, 0xd4, 0x99, 0xe8, 0x12, 0xe7,
	0xdf, 0xde, 0x25, 0x2e, 0x4c, 0xe3, 0x12, 0xff, 0xb2, 0x6a, 0x62, 0x88, 0x73, 0xa5, 0x1f, 0xdb,
	0x99, 0xf4, 0x63, 0xdb, 0xce, 0x4b, 0x6a, 0xbf, 0x05, 0x79, 0xc9, 0x9f, 0x57, 0xa1, 0xf6, 0x12,
	0x17, 0xef, 0x15, 0xdd, 0xce, 0x66, 0x24, 0x13, 0xef, 0xf4, 0x6c, 0x42, 0x9b, 0x8e, 0x0e, 0xfc,
	0xe0, 0x75, 0x40, 0x79, 0x0e, 0x2d, 0xd9, 0x62, 0x4f, 0xf1, 0xc8, 0xf0, 0x35, 0x66, 0xca, 0xba,
	0xf0, 0xc7, 0x69, 0x58, 0xd1, 0x7c, 0x7b, 0x56, 0xb4, 0xa6, 0x61, 0xc5, 0xdf, 0xd5, 0x00, 0xd2,
	0x3b, 0x24, 0x25, 0x1c, 0x59, 0xca, 0xb7, 0x48, 0x7c, 0x25, 0x1b, 0x0b, 0xd9, 0x16, 0x88, 0x9f,
	0xfb, 0x99, 0x50, 0x2d, 0xff, 0x33, 0xa1, 0x8f, 0x0b, 0xb5, 0xe6, 0xf4, 0x7e, 0x8b, 0x62, 0xd2,
	0x85, 0x0c, 0x49, 0x6b, 0x5b, 0xd7, 0x65, 0xa9, 0xd7, 0x42, 0x98, 0x15, 0x08, 0x9d, 0x98, 0xc6,
	0x16, 0xd8, 0x87, 0xe0, 0xc8, 0x42, 0x63, 0xf1, 0xe6, 0x8c, 0xb2, 0x4f, 0xab, 0x62, 0x3d, 0x7f,
	0x69, 0x86, 0x33, 0x90, 0x32, 0x9c, 0x30, 0x51, 0xf6, 0x3c, 0x8f, 0x2c, 0x09, 0xe8, 0xc7, 0x45,
	0x1b, 0xff, 0x63, 0x1d, 0xdb, 0x07, 0x00, 0xbb, 0x38, 0xf1, 0x9f, 0x88, 0x7a, 0x2b, 0x37, 0xfb,
	0xc3, 0x28, 0x64, 0xc7, 0xea, 0xe0, 0xe4, 0x80, 0x9b, 0xb0, 0x53, 0x82, 0x13, 0xed, 0x20, 0xf8,
	0x73, 0xf7, 0x5b, 0x68, 0xbd, 0xc0, 0xaf, 0x89, 0xcf, 0x91, 0x0b, 0x87, 0xbd, 0x08, 0xb5, 0x18,
	0x87, 0x0a, 0x9e, 0x3f, 0xa2, 0xf7, 0xa1, 0x2e, 0x4b, 0xba, 0x2a, 0x26, 0x5e, 0x4e, 0xf5, 0xc1,
	0xbc, 0xdd, 0x55, 0x20, 0xdc, 0x6b, 0x3b, 0xca, 0xa6, 0x3e, 0x8d, 0x92, 0xe1, 0xf4, 0xde, 0x0b,
	0xc1, 0x4c, 0xd0, 0x37, 0xba, 0x24, 0x9e, 0x8d, 0x1d, 0x9e, 0xb1, 0xec, 0x70, 0x69, 0x36, 0x5a,
	0x62, 0x9d, 0xeb, 0x65, 0xd6, 0xf9, 0x06, 0x2c, 0x1c, 0x63, 0xea, 0x51, 0xce, 0x05, 0xaf, 0x8f,
	0x13, 0x9f, 0x0a, 0x2b, 0xde, 0x74, 0x3b, 0xc7, 0x98, 0x1a, 0xde, 0x50, 0xf4, 0x00, 0xda, 0x36,
	0x4c, 0x27, 0x57, 0xc1, 0x35, 0x90, 0x2e, 0x50, 0x83, 0xd4, 0xfd, 0x05, 0xdc, 0x2d, 0xbd, 0x71,
	0xb3, 0x47, 0x92, 0xfd, 0x04, 0x87, 0x94, 0xab, 0x7e, 0x14, 0x5a, 0x12, 0xbb, 0x08, 0xb5, 0x43,
	0x42, 0x54, 0x58, 0xc9, 0x1f, 0x27, 0x5d, 0xd5, 0xe8, 0xfe, 0x75, 0x05, 0x36, 0x4b, 0xe9, 0xa7,
	0x14, 0x69, 0x09, 0x49, 0x0f, 0x16, 0x62, 0x92, 0x78, 0x2c, 0xdd, 0x81, 0x32, 0x6f, 0x1f, 0x4c,
	0xbe, 0x27, 0x34, 0x6e, 0xd7, 0xee, 0x7c, 0x9c, 0x59, 0xe9, 0xfe, 0xeb, 0xb8, 0x7d, 0xf5, 0x42,
	0x46, 0x8e, 0xe4, 0xa5, 0x42, 0x1e, 0x8e, 0xe9, 0x20, 0x33, 0xfd, 0x19, 0x21, 0xe8, 0xa9, 0x9e,
	0x88, 0x2e, 0x0d, 0x80, 0x89, 0x2e, 0xd5, 0xaf, 0x73, 0xf4, 0x82, 0x89, 0x2e, 0x3f, 0x85, 0x0d,
	0x03, 0x5c, 0x8c, 0x49, 0xa5, 0x04, 0x39, 0x1a, 0x62, 0x37, 0x1f, 0x9b, 0xbe, 0x03, 0x10, 0xa8,
	0xad, 0x11, 0x19, 0xc1, 0x36, 0x5d, 0x6b, 0xa6, 0xdb, 0x83, 0x6b, 0xe5, 0xdf, 0xe3, 0x93, 0x70,
	0xc2, 0x4d, 0xa7, 0x12, 0xa1, 0xee, 0xfe, 0x4d, 0x15, 0x56, 0x4b, 0x69, 0xa1, 0x17, 0x85, 0xbe,
	0xbe, 0x54, 0xb2, 0x3b, 0x93, 0x4f, 0x25, 0xbb, 0x87, 0x7c, 0xa3, 0xbf, 0x07, 0x90, 0x33, 0xab,
	0xf6, 0x4f, 0xdb, 0xce, 0x12, 0x1e, 0xd7, 0x42, 0x46, 0x5f, 0x42, 0x3b, 0x48, 0xcf, 0x4f, 0x45,
	0xf0, 0x67, 0xd0, 0xb2, 0x0e, 0xdc, 0xb5, 0xb1, 0x27, 0xd6, 0x09, 0xba, 0x2f, 0x60, 0xc1, 0x25,
	0x87, 0xa3, 0xd0, 0x4f, 0x8b, 0x85, 0xe3, 0xef, 0xfb, 0xa8, 0x3a, 0x5e, 0xb5, 0xa4, 0x8e, 0x57,
	0xb3, 0x2f, 0xf3, 0xfc, 0xba, 0x06, 0x75, 0x49, 0xb5, 0x70, 0x4e, 0xf6, 0xaf, 0x48, 0xab, 0xd9,
	0x5f, 0x91, 0xe6, 0x8a, 0x47, 0xb5, 0x42, 0xf1, 0x28, 0xad, 0x8c, 0xcf, 0x64, 0x2a, 0xe3, 0x97,
	0x40, 0x5a, 0xf6, 0x28, 0xe9, 0xe9, 0x6a, 0x49, 0x3a, 0x21, 0x7f, 0x97, 0x89, 0x69, 0x14, 0x2a,
	0xa3, 0xa4, 0x46, 0x99, 0xd0, 0xbc, 0x71, 0x76, 0x68, 0x9e, 0x76, 0xfe, 0x9b, 0x13, 0x3a, 0xff,
	0x3f, 0xd2, 0x0d, 0x34, 0xf4, 0x61, 0xe6, 0x2e, 0x4b, 0x3b, 0x77, 0xad, 0x37, 0x77, 0xa2, 0xf6,
	0x8d, 0x96, 0x8b, 0xd0, 0xa2, 0x78, 0x40, 0xa8, 0xc7, 0xf0, 0x89, 0xb0, 0xbe, 0x55, 0xb7, 0x29,
	0x26, 0xf6, 0xf1, 0x49, 0xf7, 0xbf, 0x66, 0xa1, 0xa9, 0x1b, 0x74, 0xa5, 0x77, 0x09, 0xc5, 0x8f,
	0x1d, 0xab, 0xd6, 0x8f, 0x1d, 0xcf, 0x8a, 0x3c, 0xce, 0xbc, 0x50, 0x98, 0x3b, 0xf4, 0xd9, 0xc2,
	0xa1, 0x6b, 0xc5, 0xae, 0x97, 0xfd, 0x8a, 0xa0, 0x61, 0xff, 0x8a, 0xe0, 0x3a, 0xcc, 0x8b, 0x07,
	0xf9, 0xf3, 0xe1, 0x80, 0xc8, 0xdf, 0x18, 0x37, 0xdd, 0x8e, 0x98, 0x7d, 0xa9, 0x26, 0xd3, 0x62,
	0x71, 0xcb, 0x2e, 0x16, 0xf3, 0x30, 0x87, 0x3f, 0xa4, 0xc8, 0x20, 0x91, 0xc5, 0xac, 0x41, 0x96,
	0x85, 0xf4, 0xb6, 0x29, 0xa4, 0xaf, 0x41, 0x7d, 0x10, 0xf5, 0xf1, 0x80, 0xa8, 0x7c, 0x44, 0x8d,
	0xd0, 0x07, 0xe9, 0xd5, 0xf1, 0xce, 0x39, 0xba, 0xa7, 0xe6, 0x62, 0xf9, 0x27, 0x56, 0x7b, 0x66,
	0x5e, 0xf8, 0xbd, 0x2b, 0x85, 0xd6, 0xe9, 0xd8, 0xee, 0xcc, 0x4d, 0x58, 0xc0, 0xfd, 0x3e, 0x89,
	0x99, 0x67, 0xaa, 0xe8, 0xf2, 0xa7, 0xc8, 0xf3, 0x72, 0xfa, 0x2b, 0x5d, 0x4b, 0xbf, 0x0c, 0x20,
	0xbb, 0xae, 0x47, 0x24, 0x64, 0xea, 0x47, 0xc9, 0x2d, 0xd1, 0x65, 0xe5, 0x13, 0xe8, 0x43, 0x68,
	0xa9, 0x56, 0x34, 0x96, 0x57, 0x79, 0x26, 0x8b, 0x65, 0x53, 0x02, 0x4b, 0x81, 0xfe, 0xf1, 0x6f,
	0x87, 0xff, 0xa0, 0xf6, 0xd0, 0xa3, 0xcf, 0xbf, 0xfd, 0xec, 0x28, 0x60, 0xc7, 0xa3, 0x83, 0xad,
	0x7e, 0x34, 0xbc, 0x17, 0xe3, 0x53, 0x3a, 0x8a, 0x49, 0x62, 0x1e, 0xee, 0x2a, 0xe6, 0xdf, 0xa5,
	0x24, 0x79, 0xcd, 0xe7, 0x5f, 0x1d, 0xc9, 0xdf, 0xfa, 0xeb, 0x3f, 0x08, 0x70, 0x50, 0x17, 0xc3,
	0x07, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x99, 0x60, 0x2c, 0x2a, 0x40, 0x00, 0x00,
}
