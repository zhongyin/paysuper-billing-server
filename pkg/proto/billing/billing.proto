syntax = "proto3";

option go_package = "github.com/paysuper/paysuper-billing-server/pkg/proto/billing";
package billing;

import "google/protobuf/timestamp.proto";

message Name {
    // @inject_tag: bson:"EN" json:"EN" structure:"EN"
    string en = 1;
    // @inject_tag: bson:"RU" json:"RU" structure:"RU"
    string ru = 2;
}

message OrderCreateRequest {
    // @inject_tag: query:"PO_PROJECT_ID" form:"PO_PROJECT_ID" json:"project" validate:"required,hexadecimal"
    string project_id = 1;
    // @inject_tag: query:"PO_SIGNATURE" form:"PO_SIGNATURE" validate:"omitempty,alphanum"
    string signature = 2;
    // @inject_tag: query:"PO_AMOUNT" form:"PO_AMOUNT" json:"amount" validate:"required,numeric"
    double amount = 3;
    // @inject_tag: query:"PO_CURRENCY" form:"PO_CURRENCY" json:"currency" validate:"omitempty,alpha,len=3"
    string currency = 4;
    // @inject_tag: "PO_ACCOUNT" form:"PO_ACCOUNT" json:"account"`
    string account = 5;
    // @inject_tag: query:"PO_ORDER_ID" form:"PO_ORDER_ID" json:"order_id" validate:"omitempty,max=255"
    string order_id = 6;
    // @inject_tag: query:"PO_DESCRIPTION" form:"PO_DESCRIPTION" json:"description" validate:"omitempty,max=255"
    string description = 7;
    // @inject_tag: query:"PO_PAYMENT_METHOD" form:"PO_PAYMENT_METHOD" json:"payment_method" validate:"omitempty,max=255"
    string payment_method = 8;
    // @inject_tag: query:"PO_URL_VERIFY" form:"PO_URL_VERIFY" json:"url_verify" validate:"omitempty,url"
    string url_verify = 9;
    // @inject_tag: query:"PO_URL_NOTIFY" form:"PO_URL_NOTIFY" json:"url_notify" validate:"omitempty,url"
    string url_notify = 10;
    // @inject_tag: query:"PO_URL_SUCCESS" form:"PO_URL_SUCCESS" json:"url_success" validate:"omitempty,url"
    string url_success = 11;
    // @inject_tag: query:"PO_URL_FAIL" form:"PO_URL_FAIL" json:"url_fail" validate:"omitempty,url"
    string url_fail = 12;
    // @inject_tag: query:"PO_PAYER_EMAIL" form:"PO_PAYER_EMAIL" json:"payer_email" validate:"omitempty,email"
    string payer_email = 13;
    // @inject_tag: query:"PO_PAYER_PHONE" form:"PO_PAYER_PHONE" json:"payer_phone" validate:"omitempty,max=255"
    string payer_phone = 14;
    // @inject_tag: query:"PO_REGION" form:"PO_REGION" json:"region" validate:"omitempty,alpha,len=2"
    string region = 15;
    string payer_ip = 16;
    map<string, string> other = 17;
    // @inject_tag: json:"-"
    map<string, string> raw_params = 18;
    // @inject_tag: json:"-"
    string raw_body = 19; //`json:"-"`
    // @inject_tag: json:"-"
    bool is_json = 20;
    // @inject_tag: json:"-"
    string language = 21;
    // @inject_tag: json:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
    repeated string products = 22;
    // @inject_tag: json:"-"
    map<string, string> metadata = 23;
    // @inject_tag: json:"-"
    map<string, string> private_metadata = 24;
    // @inject_tag: json:"receipt_number"
    string receipt_number = 25; // payer receipt number from create order request
    // @inject_tag: json:"receipt_url"
    string receipt_url = 26; // payer receipt url from create order request
    // @inject_tag: json:"issuer_url"
    string issuer_url = 27;
    // @inject_tag: json:"issuer_embedded"
    bool issuer_embedded = 28;

    string token = 29;
    OrderUser user = 30;
}

message Project {
    // @inject_tag: json:"id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    // @inject_tag: json:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 2;
    // @inject_tag: json:"name" validate:"required"
    map<string, string> name = 3;
    // @inject_tag: json:"image" validate:"omitempty,url"
    string image = 4;
    //@inject_tag: json:"callback_currency" validate:"omitempty,len=3"
    string callback_currency = 5;
    //@inject_tag: json:"callback_protocol" validate:"omitempty,oneof=default empty"
    string callback_protocol = 6;
    //@inject_tag: json:"create_order_allowed_urls" validate:"omitempty,dive,url"
    repeated string create_order_allowed_urls = 7;
    //@inject_tag: json:"allow_dynamic_notify_urls"
    bool allow_dynamic_notify_urls = 8;
    //@inject_tag: json:"allow_dynamic_redirect_urls"
    bool allow_dynamic_redirect_urls = 9;
    //@inject_tag: json:"limits_currency" validate:"omitempty,len=3"
    string limits_currency = 10;
    // @inject_tag: json:"min_payment_amount" validate:"omitempty,numeric,gte=0"
    double min_payment_amount = 11;
    // @inject_tag: json:"max_payment_amount" validate:"omitempty,numeric,gte=0"
    double max_payment_amount = 12;
    // @inject_tag: json:"notify_emails" validate:"omitempty,dive,email"
    repeated string notify_emails = 13;
    // @inject_tag: json:"is_products_checkout"
    bool is_products_checkout = 14;
    // @inject_tag: json:"secret_key" validate:"omitempty,max=255"
    string secret_key = 15;
    // @inject_tag: json:"signature_required"
    bool signature_required = 16;
    // @inject_tag: json:"send_notify_email"
    bool send_notify_email = 17;
    // @inject_tag: json:"url_check_account" validate:"omitempty,url"
    string url_check_account = 18;
    // @inject_tag: json:"url_process_payment" validate:"omitempty,url"
    string url_process_payment = 19;
    // @inject_tag: json:"url_redirect_fail" validate:"omitempty,url"
    string url_redirect_fail = 20;
    // @inject_tag: json:"url_redirect_success" validate:"omitempty,url"
    string url_redirect_success = 21;
    // @inject_tag: json:"status" validate:"omitempty,numeric,oneof=0 1 2 3 4"
    int32 status = 22;
    // @inject_tag: json:"created_at"
    google.protobuf.Timestamp created_at = 23;
    // @inject_tag: json:"updated_at"
    google.protobuf.Timestamp updated_at = 24;
    // @inject_tag: json:"products_count"
    int32 products_count = 25;
    // @inject_tag: json:"url_chargeback_payment" validate:"omitempty,url"
    string url_chargeback_payment = 26;
    // @inject_tag: json:"url_cancel_payment" validate:"omitempty,url"
    string url_cancel_payment = 27;
    // @inject_tag: json:"url_fraud_payment" validate:"omitempty,url"
    string url_fraud_payment = 28;
    // @inject_tag: json:"url_refund_payment" validate:"omitempty,url"
    string url_refund_payment = 29;
}

message ProjectOrder {
    string id = 1;
    string merchant_id = 2;
    map<string, string> name = 3;
    string url_success = 4;
    string url_fail = 5;
    repeated string notify_emails = 6;
    string secret_key = 7;
    bool send_notify_email = 8;
    string url_check_account = 9;
    string url_process_payment = 10;
    string callback_protocol = 11;
    string url_chargeback_payment = 12;
    string url_cancel_payment = 13;
    string url_fraud_payment = 14;
    string url_refund_payment = 15;
    int32 status = 16;
}

message MerchantContact {
    // @inject_tag: validate:"required" json:"authorized"
    MerchantContactAuthorized authorized = 1;
    // @inject_tag: validate:"required" json:"technical"
    MerchantContactTechnical technical = 2;
}

message MerchantContactTechnical {
    // @inject_tag: json:"name"
    string name = 1;
    // @inject_tag: validate:"omitempty,email" json:"email"
    string email = 2;
    // @inject_tag: validate:"omitempty,phone" json:"phone"
    string phone = 3;
}

message MerchantContactAuthorized {
    // @inject_tag: json:"name"
    string name = 1;
    // @inject_tag: validate:"omitempty,email" json:"email"
    string email = 2;
    // @inject_tag: validate:"omitempty,phone" json:"phone"
    string phone = 3;
    // @inject_tag: json:"position"
    string position = 4;
}

message MerchantBanking {
    // @inject_tag: json:"currency"
    Currency currency = 1;
    // @inject_tag: json:"name"
    string name = 2;
    // @inject_tag: json:"address"
    string address = 3;
    // @inject_tag: json:"account_number"
    string account_number = 4;
    // @inject_tag: json:"swift"
    string swift = 5;
    // @inject_tag: json:"details"
    string details = 6;
}

message MerchantLastPayout {
    // @inject_tag: json:"date"
    google.protobuf.Timestamp date = 1;
    // @inject_tag: json:"amount"
    double amount = 2;
}

message MerchantUser {
    // @inject_tag: json:"id" validate:"required"
    string id = 1;
    // @inject_tag: json:"email" validate:"required,email"
    string email = 2;
}

message Merchant {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: json:"user"
    MerchantUser user = 2;
    // @inject_tag: json:"name"
    string name = 4;
    // @inject_tag: json:"alternative_name"
    string alternative_name = 5;
    // @inject_tag: json:"website"
    string website = 6;
    // @inject_tag: json:"country"
    Country country = 7;
    // @inject_tag: json:"state"
    string state = 8;
    // @inject_tag: json:"zip"
    string zip = 9;
    // @inject_tag: json:"city"
    string city = 10;
    // @inject_tag: json:"address"
    string address = 11;
    // @inject_tag: json:"address_additional"
    string address_additional = 12;
    // @inject_tag: json:"registration_number"
    string registration_number = 13;
    // @inject_tag: json:"tax_id"
    string tax_id = 14;
    // @inject_tag: json:"contacts"
    MerchantContact contacts = 15;
    // @inject_tag: json:"banking"
    MerchantBanking banking = 16;
    // @inject_tag: json:"status"
    int32 status = 17;
    // @inject_tag: json:"created_at"
    google.protobuf.Timestamp created_at = 18;
    // @inject_tag: json:"updated_at"
    google.protobuf.Timestamp updated_at = 19;
    // @inject_tag: json:"first_payment_at"
    google.protobuf.Timestamp first_payment_at = 20;
    // @inject_tag: json:"-"
    bool is_vat_enabled = 21;
    // @inject_tag: json:"-"
    bool is_commission_to_user_enabled = 22;
    // @inject_tag: json:"has_merchant_signature"
    bool has_merchant_signature = 23;
    // @inject_tag: json:"has_psp_signature"
    bool has_psp_signature = 24;
    // @inject_tag: json:"last_payout"
    MerchantLastPayout last_payout = 25;
    // @inject_tag: json:"is_signed"
    bool is_signed = 26;
    // @inject_tag: json:"payment_methods"
    map<string, MerchantPaymentMethod> payment_methods = 28;
    // @inject_tag: json:"agreement_type"
    int32 agreement_type = 29;
    // @inject_tag: json:"agreement_sent_via_mail"
    bool agreement_sent_via_mail = 30;
    // @inject_tag: json:"mail_tracking_link"
    string mail_tracking_link = 31;
    // @inject_tag: json:"-"
    string s3_agreement_name = 32;
}

message SystemNotificationStatuses {
    int32 from = 1;
    int32 to = 2;
}

message Notification {
    string id = 1;
    string title = 2;
    string message = 3;
    string merchant_id = 4;
    string user_id = 5;
    bool is_system = 6;
    bool is_read = 7;
    SystemNotificationStatuses statuses = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
}

message OrderPlatformFee {
    float amount = 1;
    string currency = 2;
    float effective_rate = 3;
}

message OrderTax {
    string type = 1;
    double rate = 2;
    double amount = 3;
    string currency = 4;
}

message OrderBillingAddress {
    // @inject_tag: validate:"omitempty,alpha,len=2"
    string country = 1;
    string city = 2;
    string postal_code = 3;
    string state = 4;
}

message OrderUser {
    // @inject_tag: json:"id"
    string id = 1;
    // @inject_tag: json:"object"
    string object = 2;
    // @inject_tag: json:"external_id"
    string external_id = 3;
    // @inject_tag: json:"name"
    string name = 4;
    // @inject_tag: json:"email" validate:"omitempty,email"
    string email = 5;
    // @inject_tag: json:"email_verified"
    bool email_verified = 6;
    // @inject_tag: json:"phone" validate:"omitempty,phone"
    string phone = 7;
    // @inject_tag: json:"phone_verified"
    bool phone_verified = 8;
    // @inject_tag: json:"ip" validate:"omitempty,ip"
    string ip = 9;
    // @inject_tag: json:"locale" validate:"omitempty,alpha,len=2"
    string locale = 10;
    // @inject_tag: json:"address"
    OrderBillingAddress address = 11;
    // @inject_tag: json:"metadata"
    map<string, string> metadata = 12;
    // @inject_tag: json:"-"
    string tech_email = 13;
}

message Order {
    string id = 1; // unique order identifier in Protocol One
    // @inject_tag: bson:"project" structure:"project"
    ProjectOrder project = 2; // object described main entities of project in Protocol One payment solution
    // @inject_tag: bson:"project_order_id" structure:"project_order_id"
    string project_order_id = 3; // unique order identifier in project. if was send in create order process
    // @inject_tag: bson:"project_account" structure:"project_account"
    string project_account = 4; // user unique account in project
    // @inject_tag: bson:"description" structure:"description"
    string description = 5; // order description
    // @inject_tag: bson:"project_income_amount" structure:"project_income_amount"
    double project_income_amount = 6; // order amount received from project
    // @inject_tag: bson:"project_income_currency" structure:"project_income_currency"
    Currency project_income_currency = 7; // order currency received from project
    // @inject_tag: bson:"project_outcome_amount" structure:"project_outcome_amount"
    double project_outcome_amount = 8; // order amount send to project in notification request
    // @inject_tag: bson:"project_outcome_currency" structure:"project_outcome_currency"
    Currency project_outcome_currency = 9; // order currency send to project in notification request
    // @inject_tag: bson:"project_last_requested_at" structure:"project_last_requested_at,timestamp"
    google.protobuf.Timestamp project_last_requested_at = 10; // date of last notification request to project
    // @inject_tag: bson:"project_params" structure:"project_params"
    map<string, string> project_params = 11; // any project params which received from project in request of create of order
    // @inject_tag: bson:"payment_method" structure:"payment_method"
    PaymentMethodOrder payment_method = 13; // payment method unique identifier
    // @inject_tag: bson:"pm_order_id" structure:"pm_order_id"
    string payment_method_order_id = 14; // unique order id in payment system
    // @inject_tag: bson:"pm_outcome_amount" structure:"pm_outcome_amount"
    double payment_method_outcome_amount = 15; // order amount send to payment system
    // @inject_tag: bson:"pm_outcome_currency" structure:"pm_outcome_currency"
    Currency payment_method_outcome_currency = 16; // order currency send to payment system
    // @inject_tag: bson:"pm_income_amount" structure:"pm_income_amount"
    double payment_method_income_amount = 17; // order amount received from payment system in notification request
    // @inject_tag: bson:"pm_income_currency" structure:"pm_income_currency"
    Currency payment_method_income_currency = 18; // order currency received from payment system in notification request
    // @inject_tag: bson:"pm_order_close_date" structure:"pm_order_close_date,timestamp"
    google.protobuf.Timestamp payment_method_order_closed_at = 19; // date of ended payment operation in payment system
    // @inject_tag: bson:"status" structure:"status"
    int32 status = 20; // order status
    // @inject_tag: bson:"created_at" structure:"created_at,timestamp"
    google.protobuf.Timestamp created_at = 21; // date of create order
    // @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
    google.protobuf.Timestamp updated_at = 22; // date of last update order data
    // @inject_tag: bson:"created_by_json" structure:"created_by_json"
    bool is_json_request = 23; // is order create by json request
    // @inject_tag: bson:"amount_psp_ac" structure:"amount_psp_ac"
    double amount_in_psp_accounting_currency = 24; // operation amount in accounting currency of PSP
    // @inject_tag: bson:"amount_in_merchant_ac" structure:"amount_in_merchant_ac"
    double amount_in_merchant_accounting_currency = 25; // received from project operation amount in project owner (merchant) accounting currency
    // @inject_tag: bson:"amount_out_merchant_ac" structure:"amount_out_merchant_ac"
    double amount_out_merchant_accounting_currency = 26; // received from payment system operation amount in project owner (merchant) accounting currency
    // @inject_tag: bson:"amount_ps_ac" structure:"amount_ps_ac"
    double amount_in_payment_system_accounting_currency = 27; // operation amount in payment system accounting currency
    // @inject_tag: bson:"pm_account" structure:"pm_account"
    string payment_method_payer_account = 28; // account of payer in payment system
    // @inject_tag: bson:"pm_txn_params" structure:"pm_txn_params"
    map<string, string> payment_method_txn_params = 29; // any params received in request of payment system about payment
    // @inject_tag: bson:"payment_requisites" json:"-" structure:"payment_requisites"
    map<string, string> payment_requisites = 31;
    // @inject_tag: bson:"psp_fee_amount" structure:"psp_fee_amount"
    OrderFeePsp psp_fee_amount = 32; // PSP (P1) fee amount
    // @inject_tag: bson:"project_fee_amount" structure:"project_fee_amount"
    OrderFee project_fee_amount = 33; // fee is charged with the project for the operation
    // @inject_tag: bson:"to_payer_fee_amount" structure:"to_payer_fee_amount"
    OrderFee to_payer_fee_amount = 34; // value of fee which added to payer amount
    // @inject_tag: bson:"ps_fee_amount" structure:"ps_fee_amount"
    OrderFeePaymentSystem payment_system_fee_amount = 36; // payment system fee for payment operation

    OrderTax tax = 37;
    // @inject_tag: json:"-"
    string uuid = 38;
    // @inject_tag: json:"-"
    google.protobuf.Timestamp expire_date_to_form_input = 39;
    double total_payment_amount = 43; // total amount to payment with all commissions
    OrderBillingAddress billing_address = 44; // user billing address entered in payment form
    OrderUser user = 45;

    // @inject_tag: json:"-"
    bool user_address_data_required = 46;

    // @inject_tag: json:"-" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
    repeated string products = 47;

    // @inject_tag: json:"items" validate="omitempty,gte=1,dive"
    repeated OrderItem items = 48;

    // @inject_tag: validate:"required,numeric,gt=0" json:"amount"
    double amount = 49;
    //@inject_tag: validate:"required,alpha,len=3" json:"currency"
    string currency = 50;

    // @inject_tag: json:"metadata"
    map<string, string> metadata = 51;

    // @inject_tag: json:"-"
    map<string, string> private_metadata = 52;

    //@inject_tag: validate:"required" json:"issuer"
    OrderIssuer issuer = 53;

    //@inject_tag: json:"canceled_at"
    google.protobuf.Timestamp canceled_at = 54;
    //@inject_tag: json:"cancellation_reason"
    string cancellation_reason = 55;
    //@inject_tag: validate:"required" json:"agreement_version"
    string agreement_version = 56;
    //@inject_tag: validate:"required" json:"agreement_accepted"
    bool agreement_accepted = 57;
    //@inject_tag: validate:"required" json:"notify_sale"
    bool notify_sale = 58;
    //@inject_tag: json:"notify_sale_email"
    string notify_sale_email = 59;
    //@inject_tag: json:"refunded_at"
    google.protobuf.Timestamp refunded_at = 60;
    //@inject_tag: validate:"omitempty,dive" json:"refund"
    OrderNotificationRefund refund = 61;
}

message OrderItem {
    //@inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
    string id = 1;
    //@inject_tag: validate:"required" json:"object"
    string object = 2;
    //@inject_tag: validate:"required" json:"sku" bson:"sku"
    string sku = 3;
    //@inject_tag: validate:"required" json:"name"
    string name = 4;
    //@inject_tag: validate:"required" json:"description"
    string description = 5;
    // @inject_tag: validate:"required,numeric,gt=0" json:"amount"
    double amount = 6;
    //@inject_tag: validate:"required,alpha,len=3" json:"currency"
    string currency = 7;
    //@inject_tag: validate:"dive,omitempty,uri" json:"images"
    repeated string images = 8;
    //@inject_tag: validate:"omitempty,url" json:"url"
    string url = 9;
    //@inject_tag: json:"metadata"
    map<string, string> metadata = 10;
    //@inject_tag: json:"created_at"
    google.protobuf.Timestamp created_at = 11;
    //@inject_tag: json:"updated_at"
    google.protobuf.Timestamp updated_at = 12;

}

message Currency {
    // @inject_tag: bson:"code_int"
    int32 code_int = 1;
    // @inject_tag: bson:"code_a3"
    string code_a3 = 2;
    // @inject_tag: bson:"name"
    Name name = 4;
    // @inject_tag: bson:"is_active"
    bool is_active = 5;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 6;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 7;
}

message PayerData {
    // @inject_tag: bson:"ip" structure:"ip"
    string ip = 1; // payer ip from create order request
    // @inject_tag: bson:"country_code_a2" structure:"country_code_a2"
    string country = 2; // payer country code by ISO 3166-1 from create order request
    // @inject_tag: bson:"country_name" structure:"country_name"
    Name country_name = 3; // payer country names
    // @inject_tag: bson:"city" structure:"city"
    Name city = 4; // payer city names, get from ip geo location
    string zip = 5;
    string state = 6;
    string language = 7;
    // @inject_tag: bson:"timezone" structure:"timezone"
    string timezone = 9; // payer timezone name, get from ip geo location
    // @inject_tag: bson:"phone" structure:"phone"
    string phone = 10; // payer phone from create order request
    // @inject_tag: bson:"email" structure:"email"
    string email = 11; // payer email from create order request
    // @inject_tag: bson:"receipt_number" structure:"receipt_number"
    string receipt_number = 12; // payer receipt number from create order request
    // @inject_tag: bson:"receipt_url" structure:"receipt_url"
    string receipt_url = 13; // payer receipt url from create order request
}

message PaymentMethodOrder {
    // @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
    string id = 1;
    // @inject_tag: bson:"name" structure:"name"
    string name = 2;
    // @inject_tag: bson:"params" structure:"params"
    PaymentMethodParams params = 3;
    // @inject_tag: bson:"payment_system" structure:"payment_system"
    PaymentSystem payment_system = 4;
    // @inject_tag: bson:"group_alias" structure:"group_alias"
    string group = 5;
}

message PaymentMethodParams {
    // @inject_tag: bson:"handler" structure:"handler"
    string handler = 1;
    // @inject_tag: bson:"terminal" structure:"terminal"
    string terminal = 2;
    // @inject_tag: bson:"password"
    string password = 3;
    // @inject_tag: bson:"callback_password"
    string callback_password = 5;
    // @inject_tag: bson:"external_id" structure:"external_id"
    string external_id = 6;
    // @inject_tag: bson:"other" structure:"other"
    map<string, string> other = 7;
}

message PaymentSystem {
    // @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
    string id = 1;
    string name = 2;
    // @inject_tag: bson:"country" structure:"country"
    Country Country = 3;
    // @inject_tag: bson:"accounting_currency" structure:"accounting_currency"
    Currency accounting_currency = 4;
    // @inject_tag: bson:"accounting_period" structure:"accounting_period"
    string accounting_period = 5;
    // @inject_tag: bson:"is_active" structure:"is_active"
    bool is_active = 6;
    // @inject_tag: bson:"created_at" structure:"created_at,timestamp"
    google.protobuf.Timestamp created_at = 7;
    // @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
    google.protobuf.Timestamp updated_at = 8;
}

message FixedPackage {
    // @inject_tag: bson:"id" structure:"id"
    string id = 1; // unique identifier of package
    // @inject_tag: bson:"name" structure:"name"
    string name = 2; // package name
    // @inject_tag: bson:"currency"
    Currency currency = 3;
    // @inject_tag: bson:"price" structure:"price"
    double price = 4; // package price in chosen currency
    // @inject_tag: bson:"is_active" structure:"is_active"
    bool is_active = 5; // is package active
}

message FixedPackages {
    repeated FixedPackage fixed_package = 1;
}

message OrderFee {
    // @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
    double AmountPaymentMethodCurrency = 1; // amount of fee of payment system in payment currency
    // @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
    double AmountMerchantCurrency = 2; // amount of fee of payment system in accounting currency of merchant
    // @inject_tag: bson:"merchant_currency"
    string merchant_currency_a3 = 3;
    // @inject_tag: bson:"effective_rate_merchant_currency"
    double effective_rate_merchant_currency = 4;
}

message OrderFeePsp {
    // @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
    double AmountPaymentMethodCurrency = 1; // amount of fee of payment system in payment currency
    // @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
    double AmountMerchantCurrency = 2; // amount of fee of payment system in accounting currency of merchant
    // @inject_tag: bson:"amount_psp_currency" structure:"amount_psp_currency"
    double AmountPspCurrency = 3; // amount of fee of PSP (P1) in PSP (P1) accounting currencies
}

// Contain information about payment system commission in other currencies
message OrderFeePaymentSystem {
    // @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
    double AmountPaymentMethodCurrency = 1; // amount of fee of payment system in payment currency
    // @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
    double AmountMerchantCurrency = 2; // amount of fee of payment system in accounting currency of merchant
    // @inject_tag: bson:"amount_payment_system_currency" structure:"amount_payment_system_currency"
    double AmountPaymentSystemCurrency = 3; // amount of fee of payment system in accounting currency of payment system
}

message ProjectPaymentMethod {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"terminal"
    string terminal = 2;
    // @inject_tag: bson:"password"
    string password = 3;
    // @inject_tag: bson:"callback_password"
    string callback_password = 4;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 5;
}

message CurrencyRate {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"currency_from"
    int32 currency_from = 2;
    // @inject_tag: bson:"currency_to"
    int32 currency_to = 3;
    // @inject_tag: bson:"rate"
    double rate = 4;
    // @inject_tag: bson:"is_active"
    bool is_active = 5;
    // @inject_tag: bson:"date"
    google.protobuf.Timestamp date = 6;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 7;
}

message PaymentMethod {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"name"
    string name = 2;
    // @inject_tag: bson:"group_alias"
    string group = 3;
    // @inject_tag: bson:"currency"
    Currency currency = 4;
    // @inject_tag: bson:"currencies"
    repeated int32 currencies = 5;
    // @inject_tag: bson:"min_payment_amount"
    double min_payment_amount = 6;
    // @inject_tag: bson:"max_payment_amount"
    double max_payment_amount = 7;
    // @inject_tag: bson:"params"
    PaymentMethodParams params = 8;
    // @inject_tag: bson:"icon"
    string Icon = 9;
    // @inject_tag: bson:"payment_system"
    PaymentSystem payment_system = 10;
    // @inject_tag: bson:"type"
    string type = 11;
    // @inject_tag: bson:"account_regexp"
    string account_regexp = 12;
    // @inject_tag: bson:"is_active"
    bool is_active = 13;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 14;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 15;
}

message Country {
    // @inject_tag: bson:"code_int" json:"code_int"
    int32 code_int = 1;
    // @inject_tag: bson:"code_a2" json:"code_a2"
    string code_a2 = 2;
    // @inject_tag: bson:"code_a3" json:"code_a3"
    string code_a3 = 3;
    // @inject_tag: bson:"name" json:"name"
    Name name = 4;
    // @inject_tag: bson:"is_active" json:"is_active"
    bool is_active = 5;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 6;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 7;
}

message Vat {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"country"
    Country country = 2;
    // @inject_tag: bson:"subdivision_code"
    string subdivision = 3;
    // @inject_tag: bson:"vat"
    double vat = 4;
    // @inject_tag: bson:"is_active"
    bool is_active = 5;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 8;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 9;
}

message Commission {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"pm_id"
    string payment_method_id = 2;
    // @inject_tag: bson:"project_id"
    string project_id = 3;
    // @inject_tag: bson:"pm_commission"
    double payment_method_commission = 4;
    // @inject_tag: bson:"psp_commission"
    double psp_commission = 5;
    // @inject_tag: bson:"total_commission_to_user"
    double total_commission_to_user = 6;
    // @inject_tag: bson:"start_date"
    google.protobuf.Timestamp start_date = 7;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 8;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 9;
}

message CardExpire {
    // @inject_tag: bson:"month"
    string month = 1;
    // @inject_tag: bson:"year"
    string year = 2;
}

message SavedCard {
    string id = 1;
    string pan = 2;
    CardExpire expire = 3;
}

message PaymentFormPaymentMethod {
    string id = 1;
    string name = 2;
    string icon = 3;
    string type = 4;
    // @inject_tag: json:"group_alias"
    string group = 5;
    string account_regexp = 6;
    // @inject_tag: json:"has_saved_cards"
    bool has_saved_cards = 12;
    // @inject_tag: json:"saved_cards,omitempty"
    repeated SavedCard saved_cards = 13;
}

message MerchantPaymentMethodPerTransactionCommission {
    // @inject_tag: validate:"omitempty,numeric,gte=0" json:"fee"
    double fee = 1;
    // @inject_tag: json:"currency"
    string currency = 2;
}

message MerchantPaymentMethodCommissions {
    // @inject_tag: validate:"omitempty,numeric,gte=0,lte=100" json:"fee"
    double fee = 1;
    // @inject_tag: validate:"required" json:"per_transaction"
    MerchantPaymentMethodPerTransactionCommission per_transaction = 2;
}

message MerchantPaymentMethodIntegration {
    // @inject_tag: json:"terminal_id"
    string terminal_id = 1;
    // @inject_tag: json:"terminal_password"
    string terminal_password = 2;
    // @inject_tag: json:"terminal_callback_password"
    string terminal_callback_password = 3;
    // @inject_tag: json:"integrated"
    bool integrated = 4;
}

message MerchantPaymentMethodIdentification {
    // @inject_tag: validate:"required,hexadecimal,len=24" json:"id"
    string id = 1;
    // @inject_tag: validate:"required" json:"name"
    string name = 2;
}

message MerchantPaymentMethod {
    MerchantPaymentMethodIdentification payment_method = 3;
    MerchantPaymentMethodCommissions commission = 4;
    MerchantPaymentMethodIntegration integration = 5;
    bool is_active = 6;
}

message RefundPayerData {
    string country = 1;
    string zip = 2;
    string state = 3;
}

message RefundOrder {
    string id = 1;
    string uuid = 2;
}

message Refund {
    string id = 1;
    RefundOrder order = 2;
    string external_id = 3;
    double amount = 4;
    string creatorId = 5;
    string reason = 6;
    Currency currency = 7;
    int32 status = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
    RefundPayerData payer_data = 11;
    float sales_tax = 12;
}

message SystemFee {
    // @inject_tag: json:"percent" validate:"required,numeric,gte=0,lte=100"
    double percent = 1;
    // @inject_tag: json:"percent_currency" validate:"omitempty,alpha,len=3"
    string percent_currency = 2;
    // @inject_tag: json:"fix_amount" validate:"required,numeric,gte=0"
    double fix_amount = 3;
    // @inject_tag: json:"fix_currency" validate:"required,alpha,len=3"
    string fix_currency = 4;
}

message MinAmount {
    // @inject_tag: json:"amount" validate:"required,numeric,gte=0"
    double amount = 3;
    // @inject_tag: json:"currency" validate:"required,alpha,len=3"
    string currency = 4;
}

message FeeSet {
    // @inject_tag: json:"min_amounts" validate:"required"
    map<string, double> min_amounts = 5;
    // @inject_tag: json:"transaction_cost" validate:"required,deep"
    SystemFee transaction_cost = 6;
    // @inject_tag: json:"authorization_fee" validate:"required,deep"
    SystemFee authorization_fee = 7;
}

message SystemFees {
    // @inject_tag: json:"id" bson:"_id" validate:"required,hexadecimal,len=24"
    string id = 1;
    // @inject_tag: json:"method_id" validate:"required,hexadecimal,len=24"
    string method_id = 2;
    // @inject_tag: json:"region" validate:"omitempty,alpha,len=2"
    string region = 3;
    // @inject_tag: json:"card_brand" validate:"omitempty,alpha"
    string card_brand = 4;
    // @inject_tag: json:"fees" validate:"required,gte=1"
    repeated FeeSet fees = 5;
    // @inject_tag: json:"user_id" validate:"required,hexadecimal,len=24"
    string user_id = 6;
    // @inject_tag: json:"created_at" validate:"required"
    google.protobuf.Timestamp created_at = 7;
    // @inject_tag: json:"is_active" validate:"required"
    bool is_active = 8;
}

message SystemFeesList {
    // @inject_tag: json:"system_fees"
    repeated SystemFees system_fees = 1;
}

message AddSystemFeesRequest {
    // @inject_tag: json:"method_id" validate:"required,hexadecimal,len=24"
    string method_id = 1;
    // @inject_tag: json:"region" validate:"omitempty,alpha,len=2"
    string region = 2;
    // @inject_tag: json:"card_brand" validate:"omitempty,alpha"
    string card_brand = 3;
    // @inject_tag: json:"fees" validate:"required,gte=1"
    repeated FeeSet fees = 5;
    // @inject_tag: json:"user_id" validate:"required,hexadecimal,len=24"
    string user_id = 6;
}

message GetSystemFeesRequest {
    // @inject_tag: json:"method_id" validate:"required,hexadecimal,len=24"
    string method_id = 1;
    // @inject_tag: json:"region" validate:"omitempty,alpha,len=2"
    string region = 2;
    // @inject_tag: json:"card_brand" validate:"omitempty,alpha"
    string card_brand = 3;
    // @inject_tag: json:"amount" validate:"required,numeric,gte=0"
    double amount = 4;
    // @inject_tag: json:"currency" validate:"required,alpha,len=3"
    string currency = 5;
}

message CalculatedFeeItem {
    // @inject_tag: json:"fee_amount" validate:"required,numeric,gte=0"
    double amount = 1;
    // @inject_tag: json:"fee_currency" validate:"required,alpha,len=3"
    string currency = 2;
    // @inject_tag: json:"effective_rate"
    double effective_rate = 3;
    // @inject_tag: json:"fee_name"
    string fee_name = 4;
}


message MerchantPaymentMethodHistory {
    // @inject_tag: validate:"required,hexadecimal,len=24"
    string id = 1;
    // @inject_tag: validate:"required,hexadecimal,len=24"
    string merchant_id = 2;
    // @inject_tag: validate:"required"
    MerchantPaymentMethod paymentMethod = 3;
    // @inject_tag: json:"created_at" validate:"required"
    google.protobuf.Timestamp created_at = 4;
    // @inject_tag: validate:"required,hexadecimal,len=24"
    string user_id = 5;
}

message CustomerIdentity {
    string merchant_id = 1;
    string project_id = 2;
    string type = 3;
    string value = 4;
    bool verified = 5;
    google.protobuf.Timestamp created_at = 6;
}

message CustomerIpHistory {
    bytes ip = 1;
    google.protobuf.Timestamp created_at = 2;
}

message CustomerAddressHistory {
    string country = 1;
    string city = 2;
    string postal_code = 3;
    string state = 4;
    google.protobuf.Timestamp created_at = 5;
}

message CustomerStringValueHistory {
    string value = 1;
    google.protobuf.Timestamp created_at = 2;
}

message Customer {
    string id = 1;
    string tech_email = 2;
    string external_id = 3;
    string email = 4;
    bool email_verified = 5;
    string phone = 6;
    bool phone_verified = 7;
    string name = 8;
    bytes ip = 9;
    string locale = 10;
    string accept_language = 11;
    // @inject_tag: json:"-"
    string user_agent = 12;
    OrderBillingAddress address = 13;
    repeated CustomerIdentity identity = 14;
    // @inject_tag: json:"-"
    repeated CustomerIpHistory ip_history = 15;
    // @inject_tag: json:"-"
    repeated CustomerAddressHistory address_history = 16;
    // @inject_tag: json:"-"
    repeated CustomerStringValueHistory locale_history = 17;
    // @inject_tag: json:"-"
    repeated CustomerStringValueHistory accept_language_history = 18;
    // @inject_tag: json:"metadata"
    map<string, string> metadata = 19;
    // @inject_tag: json:"-"
    google.protobuf.Timestamp created_at = 20;
    // @inject_tag: json:"-"
    google.protobuf.Timestamp updated_at = 21;
}

message TokenUserEmailValue {
    //@inject_tag: validate:"omitempty,email"
    string value = 1;
    bool verified = 2;
}

message TokenUserPhoneValue {
    //@inject_tag: validate:"omitempty,phone"
    string value = 1;
    bool verified = 2;
}

message TokenUserIpValue {
    //@inject_tag: validate:"omitempty,ip"
    string value = 1;
}

message TokenUserLocaleValue {
    //@inject_tag: validate:"omitempty,alpha,len=2"
    string value = 1;
}

message TokenUserValue {
    string value = 1;
}

message TokenUser {
    string id = 1;
    TokenUserEmailValue email = 2;
    TokenUserPhoneValue phone = 4;
    TokenUserValue name = 6;
    TokenUserIpValue ip = 7;
    TokenUserLocaleValue locale = 8;
    OrderBillingAddress address = 9;
    map<string, string> metadata = 10;
    //@inject_tag: json:"-"
    string user_agent = 11;
    //@inject_tag: json:"-"
    string accept_language = 12;
}

message TokenSettingsReturnUrl {
    //@inject_tag: validate:"omitempty,url"
    string success = 1;
    //@inject_tag: validate:"omitempty,url"
    string fail = 2;
}

message TokenSettingsItem {
    //@inject_tag: validate:"required"
    string sku = 1;
    //@inject_tag: validate:"required,numeric,gt=0"
    double amount = 5;
    //@inject_tag: validate:"required,alpha,len=3"
    string currency = 4;
}

message TokenSettings {
    //@inject_tag: json:"project_id" validate:"required,hexadecimal,len=24"
    string project_id = 2;
    //@inject_tag: json:"return_url"
    TokenSettingsReturnUrl return_url = 3;
    //@inject_tag: json:"currency" validate:"omitempty,alpha,len=3"
    string currency = 4;
    //@inject_tag: json:"amount" validate:"omitempty,numeric,gt=0"
    double amount = 5;
    //@inject_tag: json:"payment_method"
    string payment_method = 6;
    //@inject_tag: json:"items"
    repeated TokenSettingsItem items = 7;
    //@inject_tag: json:"description"
    string description = 8;
    //@inject_tag: json:"products_ids"
    repeated string products_ids = 9;
    //@inject_tag: json:"metadata"
    map<string, string> metadata = 10;
}

message OrderNotificationMessage {
    //@inject_tag: validate:"required,hexadecimal,len=24" json:"id"
    string id = 1;
    //@inject_tag: validate:"required" json:"type"
    string type = 2;
    //@inject_tag: validate:"required" json:"event"
    string event = 3;
    //@inject_tag: validate:"required" json:"live"
    bool live = 4;
    // @inject_tag: validate:"required" json:"created_at"
    google.protobuf.Timestamp created_at = 5;
    // @inject_tag: validate:"required" json:"expires_at"
    google.protobuf.Timestamp expires_at = 6;
    // @inject_tag: validate:"required,numeric,gte=0" json:"delivery_try"
    int32 delivery_try = 7;
    //@inject_tag: validate:"required" json:"object"
    OrderNotification object = 8;
}

message OrderNotification {
    //@inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
    string id = 1;
    // @inject_tag: json:"uuid"
    string uuid = 2;
    //@inject_tag: validate:"required" json:"transaction"
    string transaction = 3;
    //@inject_tag: validate:"required" json:"object"
    string object = 4;
    //@inject_tag: validate:"required" json:"status"
    string status = 5;
    //@inject_tag: validate:"required" json:"description"
    string description = 6;
    //@inject_tag: validate:"required" json:"created_at"
    google.protobuf.Timestamp created_at = 7;
    //@inject_tag: validate:"required" json:"updated_at"
    google.protobuf.Timestamp updated_at = 8;
    //@inject_tag: validate:"required,numeric,gt=0" json:"amount"
    double amount = 9;
    //@inject_tag: validate:"required,alpha,len=3" json:"currency"
    string currency = 10;
    // @inject_tag: json:"items" validate="omitempty,gte=1,dive"
    repeated OrderItem items = 12;
    //@inject_tag: json:"receipt_email"
    string receipt_email = 13;
    //@inject_tag: json:"receipt_phone"
    string receipt_phone = 14;
    //@inject_tag: json:"receipt_number"
    string receipt_number = 15;
    //@inject_tag: json:"receipt_url"
    string receipt_url = 16;
    //@inject_tag: validate:"required" json:"agreement_version"
    string agreement_version = 17;
    //@inject_tag: validate:"required" json:"agreement_accepted"
    bool agreement_accepted = 18;
    //@inject_tag: validate:"required" json:"notify_sale"
    bool notify_sale = 19;
    //@inject_tag: json:"notify_sale_email"
    string notify_sale_email = 20;
    //@inject_tag: json:"issuer"
    OrderIssuer issuer = 21;
    //@inject_tag: validate:"omitempty,dive" json:"user"
    OrderUser user = 22;
    //@inject_tag: validate:"omitempty,dive" json:"platform_fee"
    CalculatedFeeItem platform_fee = 23;
    //@inject_tag: validate:"omitempty,dive" json:"billing_address"
    OrderBillingAddress billing_address = 26;
    //@inject_tag: validate:"omitempty,dive" json:"tax"
    OrderTax tax = 27;
    // @inject_tag: json:"method"
    OrderNotificationPaymentMethod method = 28;
    //@inject_tag: validate:"required" json:"canceled"
    bool canceled = 29;
    //@inject_tag: json:"canceled_at"
    google.protobuf.Timestamp canceled_at = 30;
    //@inject_tag: json:"cancellation_reason"
    string cancellation_reason = 31;
    //@inject_tag: validate:"required" json:"refunded"
    bool refunded = 32;
    //@inject_tag: json:"refunded_at"
    google.protobuf.Timestamp refunded_at = 33;
    //@inject_tag: validate:"omitempty,dive" json:"refund"
    OrderNotificationRefund refund = 34;
    // @inject_tag: json:"metadata"
    map<string, string> metadata = 35;
}

message OrderIssuer {
    //@inject_tag: json:"url"
    string url = 1;
    //@inject_tag: json:"embedded"
    bool embedded = 2;
}

message OrderNotificationRefund {
    //@inject_tag: validate:"required,numeric,gt=0" json:"amount"
    double amount = 1;
    //@inject_tag: validate:"required,alpha,len=3" json:"currency"
    string currency = 2;
    //@inject_tag: json:"reason"
    string reason = 3;
    //@inject_tag: json:"code"
    string code = 4;
    //@inject_tag: json:"receipt_number"
    string receipt_number = 5;
    //@inject_tag: json:"receipt_url"
    string receipt_url = 6;
}